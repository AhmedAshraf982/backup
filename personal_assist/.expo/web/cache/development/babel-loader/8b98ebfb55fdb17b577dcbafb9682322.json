{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _LogBoxInspectorCodeFrame = _interopRequireDefault(require(\"./LogBoxInspectorCodeFrame\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _ScrollView = _interopRequireDefault(require(\"../../Components/ScrollView/ScrollView\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"../../StyleSheet/StyleSheet\"));\n\nvar _View = _interopRequireDefault(require(\"../../Components/View/View\"));\n\nvar LogBoxData = _interopRequireWildcard(require(\"../Data/LogBoxData\"));\n\nvar _Keyboard = _interopRequireDefault(require(\"../../Components/Keyboard/Keyboard\"));\n\nvar _LogBoxInspectorFooter = _interopRequireDefault(require(\"./LogBoxInspectorFooter\"));\n\nvar _LogBoxInspectorMessageHeader = _interopRequireDefault(require(\"./LogBoxInspectorMessageHeader\"));\n\nvar _LogBoxInspectorReactFrames = _interopRequireDefault(require(\"./LogBoxInspectorReactFrames\"));\n\nvar _LogBoxInspectorStackFrames = _interopRequireDefault(require(\"./LogBoxInspectorStackFrames\"));\n\nvar _LogBoxInspectorHeader = _interopRequireDefault(require(\"./LogBoxInspectorHeader\"));\n\nvar LogBoxStyle = _interopRequireWildcard(require(\"./LogBoxStyle\"));\n\nvar _LogBoxLog = _interopRequireDefault(require(\"../Data/LogBoxLog\"));\n\nvar _jsxFileName = \"D:\\\\vsCodes\\\\friday\\\\personal_assist\\\\node_modules\\\\react-native\\\\Libraries\\\\LogBox\\\\UI\\\\LogBoxInspector.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction LogBoxInspector(props) {\n  var logs = props.logs,\n      selectedIndex = props.selectedIndex;\n  var log = logs[selectedIndex];\n  React.useEffect(function () {\n    if (log) {\n      LogBoxData.symbolicateLogNow(log);\n    }\n  }, [log]);\n  React.useEffect(function () {\n    if (logs.length > 1) {\n      var selected = selectedIndex;\n      var lastIndex = logs.length - 1;\n      var prevIndex = selected - 1 < 0 ? lastIndex : selected - 1;\n      var nextIndex = selected + 1 > lastIndex ? 0 : selected + 1;\n      LogBoxData.symbolicateLogLazy(logs[prevIndex]);\n      LogBoxData.symbolicateLogLazy(logs[nextIndex]);\n    }\n  }, [logs, selectedIndex]);\n  React.useEffect(function () {\n    _Keyboard.default.dismiss();\n  }, []);\n\n  function _handleRetry() {\n    LogBoxData.retrySymbolicateLogNow(log);\n  }\n\n  if (log == null) {\n    return null;\n  }\n\n  return React.createElement(_View.default, {\n    style: styles.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, React.createElement(_LogBoxInspectorHeader.default, {\n    onSelectIndex: props.onChangeSelectedIndex,\n    selectedIndex: selectedIndex,\n    total: logs.length,\n    level: log.level,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), React.createElement(LogBoxInspectorBody, {\n    log: log,\n    onRetry: _handleRetry,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), React.createElement(_LogBoxInspectorFooter.default, {\n    onDismiss: props.onDismiss,\n    onMinimize: props.onMinimize,\n    level: log.level,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar headerTitleMap = {\n  warn: 'Console Warning',\n  error: 'Console Error',\n  fatal: 'Uncaught Error',\n  syntax: 'Syntax Error',\n  component: 'Render Error'\n};\n\nfunction LogBoxInspectorBody(props) {\n  var _props$log$type;\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      collapsed = _React$useState2[0],\n      setCollapsed = _React$useState2[1];\n\n  React.useEffect(function () {\n    setCollapsed(true);\n  }, [props.log]);\n  var headerTitle = (_props$log$type = props.log.type) != null ? _props$log$type : headerTitleMap[props.log.isComponentError ? 'component' : props.log.level];\n\n  if (collapsed) {\n    return React.createElement(React.Fragment, null, React.createElement(_LogBoxInspectorMessageHeader.default, {\n      collapsed: collapsed,\n      onPress: function onPress() {\n        return setCollapsed(!collapsed);\n      },\n      message: props.log.message,\n      level: props.log.level,\n      title: headerTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }), React.createElement(_ScrollView.default, {\n      style: styles.scrollBody,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, React.createElement(_LogBoxInspectorCodeFrame.default, {\n      codeFrame: props.log.codeFrame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }), React.createElement(_LogBoxInspectorReactFrames.default, {\n      log: props.log,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }), React.createElement(_LogBoxInspectorStackFrames.default, {\n      log: props.log,\n      onRetry: props.onRetry,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  return React.createElement(_ScrollView.default, {\n    style: styles.scrollBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, React.createElement(_LogBoxInspectorMessageHeader.default, {\n    collapsed: collapsed,\n    onPress: function onPress() {\n      return setCollapsed(!collapsed);\n    },\n    message: props.log.message,\n    level: props.log.level,\n    title: headerTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }), React.createElement(_LogBoxInspectorCodeFrame.default, {\n    codeFrame: props.log.codeFrame,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }), React.createElement(_LogBoxInspectorReactFrames.default, {\n    log: props.log,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }), React.createElement(_LogBoxInspectorStackFrames.default, {\n    log: props.log,\n    onRetry: props.onRetry,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = _StyleSheet.default.create({\n  root: {\n    flex: 1,\n    backgroundColor: LogBoxStyle.getTextColor()\n  },\n  scrollBody: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(0.9),\n    flex: 1\n  }\n});\n\nvar _default = LogBoxInspector;\nexports.default = _default;","map":{"version":3,"sources":["D:/vsCodes/friday/personal_assist/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspector.js"],"names":["LogBoxInspector","props","logs","selectedIndex","log","React","useEffect","LogBoxData","symbolicateLogNow","length","selected","lastIndex","prevIndex","nextIndex","symbolicateLogLazy","Keyboard","dismiss","_handleRetry","retrySymbolicateLogNow","styles","root","onChangeSelectedIndex","level","onDismiss","onMinimize","headerTitleMap","warn","error","fatal","syntax","component","LogBoxInspectorBody","useState","collapsed","setCollapsed","headerTitle","type","isComponentError","message","scrollBody","codeFrame","onRetry","StyleSheet","create","flex","backgroundColor","LogBoxStyle","getTextColor","getBackgroundColor"],"mappings":";;;;;;;;;AAUA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAWA,SAASA,eAAT,CAAyBC,KAAzB,EAAmD;AACjD,MAAOC,IAAP,GAA8BD,KAA9B,CAAOC,IAAP;AAAA,MAAaC,aAAb,GAA8BF,KAA9B,CAAaE,aAAb;AACA,MAAIC,GAAG,GAAGF,IAAI,CAACC,aAAD,CAAd;AAEAE,EAAAA,KAAK,CAACC,SAAN,CAAgB,YAAM;AACpB,QAAIF,GAAJ,EAAS;AACPG,MAAAA,UAAU,CAACC,iBAAX,CAA6BJ,GAA7B;AACD;AACF,GAJD,EAIG,CAACA,GAAD,CAJH;AAMAC,EAAAA,KAAK,CAACC,SAAN,CAAgB,YAAM;AAEpB,QAAIJ,IAAI,CAACO,MAAL,GAAc,CAAlB,EAAqB;AACnB,UAAMC,QAAQ,GAAGP,aAAjB;AACA,UAAMQ,SAAS,GAAGT,IAAI,CAACO,MAAL,GAAc,CAAhC;AACA,UAAMG,SAAS,GAAGF,QAAQ,GAAG,CAAX,GAAe,CAAf,GAAmBC,SAAnB,GAA+BD,QAAQ,GAAG,CAA5D;AACA,UAAMG,SAAS,GAAGH,QAAQ,GAAG,CAAX,GAAeC,SAAf,GAA2B,CAA3B,GAA+BD,QAAQ,GAAG,CAA5D;AACAH,MAAAA,UAAU,CAACO,kBAAX,CAA8BZ,IAAI,CAACU,SAAD,CAAlC;AACAL,MAAAA,UAAU,CAACO,kBAAX,CAA8BZ,IAAI,CAACW,SAAD,CAAlC;AACD;AACF,GAVD,EAUG,CAACX,IAAD,EAAOC,aAAP,CAVH;AAYAE,EAAAA,KAAK,CAACC,SAAN,CAAgB,YAAM;AACpBS,sBAASC,OAAT;AACD,GAFD,EAEG,EAFH;;AAIA,WAASC,YAAT,GAAwB;AACtBV,IAAAA,UAAU,CAACW,sBAAX,CAAkCd,GAAlC;AACD;;AAED,MAAIA,GAAG,IAAI,IAAX,EAAiB;AACf,WAAO,IAAP;AACD;;AAED,SACE,oBAAC,aAAD;AAAM,IAAA,KAAK,EAAEe,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,8BAAD;AACE,IAAA,aAAa,EAAEnB,KAAK,CAACoB,qBADvB;AAEE,IAAA,aAAa,EAAElB,aAFjB;AAGE,IAAA,KAAK,EAAED,IAAI,CAACO,MAHd;AAIE,IAAA,KAAK,EAAEL,GAAG,CAACkB,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,mBAAD;AAAqB,IAAA,GAAG,EAAElB,GAA1B;AAA+B,IAAA,OAAO,EAAEa,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE,oBAAC,8BAAD;AACE,IAAA,SAAS,EAAEhB,KAAK,CAACsB,SADnB;AAEE,IAAA,UAAU,EAAEtB,KAAK,CAACuB,UAFpB;AAGE,IAAA,KAAK,EAAEpB,GAAG,CAACkB,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAgBD;;AAED,IAAMG,cAAc,GAAG;AACrBC,EAAAA,IAAI,EAAE,iBADe;AAErBC,EAAAA,KAAK,EAAE,eAFc;AAGrBC,EAAAA,KAAK,EAAE,gBAHc;AAIrBC,EAAAA,MAAM,EAAE,cAJa;AAKrBC,EAAAA,SAAS,EAAE;AALU,CAAvB;;AAQA,SAASC,mBAAT,CAA6B9B,KAA7B,EAAoC;AAAA;;AAClC,wBAAkCI,KAAK,CAAC2B,QAAN,CAAe,IAAf,CAAlC;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AAEA7B,EAAAA,KAAK,CAACC,SAAN,CAAgB,YAAM;AACpB4B,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD,EAEG,CAACjC,KAAK,CAACG,GAAP,CAFH;AAIA,MAAM+B,WAAW,sBACflC,KAAK,CAACG,GAAN,CAAUgC,IADK,8BAEfX,cAAc,CAACxB,KAAK,CAACG,GAAN,CAAUiC,gBAAV,GAA6B,WAA7B,GAA2CpC,KAAK,CAACG,GAAN,CAAUkB,KAAtD,CAFhB;;AAIA,MAAIW,SAAJ,EAAe;AACb,WACE,0CACE,oBAAC,qCAAD;AACE,MAAA,SAAS,EAAEA,SADb;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMC,YAAY,CAAC,CAACD,SAAF,CAAlB;AAAA,OAFX;AAGE,MAAA,OAAO,EAAEhC,KAAK,CAACG,GAAN,CAAUkC,OAHrB;AAIE,MAAA,KAAK,EAAErC,KAAK,CAACG,GAAN,CAAUkB,KAJnB;AAKE,MAAA,KAAK,EAAEa,WALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE,oBAAC,mBAAD;AAAY,MAAA,KAAK,EAAEhB,MAAM,CAACoB,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,iCAAD;AAA0B,MAAA,SAAS,EAAEtC,KAAK,CAACG,GAAN,CAAUoC,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,mCAAD;AAA4B,MAAA,GAAG,EAAEvC,KAAK,CAACG,GAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,mCAAD;AAA4B,MAAA,GAAG,EAAEH,KAAK,CAACG,GAAvC;AAA4C,MAAA,OAAO,EAAEH,KAAK,CAACwC,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CARF,CADF;AAgBD;;AACD,SACE,oBAAC,mBAAD;AAAY,IAAA,KAAK,EAAEtB,MAAM,CAACoB,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,qCAAD;AACE,IAAA,SAAS,EAAEN,SADb;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMC,YAAY,CAAC,CAACD,SAAF,CAAlB;AAAA,KAFX;AAGE,IAAA,OAAO,EAAEhC,KAAK,CAACG,GAAN,CAAUkC,OAHrB;AAIE,IAAA,KAAK,EAAErC,KAAK,CAACG,GAAN,CAAUkB,KAJnB;AAKE,IAAA,KAAK,EAAEa,WALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,oBAAC,iCAAD;AAA0B,IAAA,SAAS,EAAElC,KAAK,CAACG,GAAN,CAAUoC,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE,oBAAC,mCAAD;AAA4B,IAAA,GAAG,EAAEvC,KAAK,CAACG,GAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAUE,oBAAC,mCAAD;AAA4B,IAAA,GAAG,EAAEH,KAAK,CAACG,GAAvC;AAA4C,IAAA,OAAO,EAAEH,KAAK,CAACwC,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAcD;;AAED,IAAMtB,MAAM,GAAGuB,oBAAWC,MAAX,CAAkB;AAC/BvB,EAAAA,IAAI,EAAE;AACJwB,IAAAA,IAAI,EAAE,CADF;AAEJC,IAAAA,eAAe,EAAEC,WAAW,CAACC,YAAZ;AAFb,GADyB;AAK/BR,EAAAA,UAAU,EAAE;AACVM,IAAAA,eAAe,EAAEC,WAAW,CAACE,kBAAZ,CAA+B,GAA/B,CADP;AAEVJ,IAAAA,IAAI,EAAE;AAFI;AALmB,CAAlB,CAAf;;eAWe5C,e","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport LogBoxInspectorCodeFrame from './LogBoxInspectorCodeFrame';\nimport * as React from 'react';\nimport ScrollView from '../../Components/ScrollView/ScrollView';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport View from '../../Components/View/View';\nimport * as LogBoxData from '../Data/LogBoxData';\nimport Keyboard from '../../Components/Keyboard/Keyboard';\nimport LogBoxInspectorFooter from './LogBoxInspectorFooter';\nimport LogBoxInspectorMessageHeader from './LogBoxInspectorMessageHeader';\nimport LogBoxInspectorReactFrames from './LogBoxInspectorReactFrames';\nimport LogBoxInspectorStackFrames from './LogBoxInspectorStackFrames';\nimport LogBoxInspectorHeader from './LogBoxInspectorHeader';\nimport * as LogBoxStyle from './LogBoxStyle';\nimport LogBoxLog, {type LogLevel} from '../Data/LogBoxLog';\n\ntype Props = $ReadOnly<{|\n  onDismiss: () => void,\n  onChangeSelectedIndex: (index: number) => void,\n  onMinimize: () => void,\n  logs: $ReadOnlyArray<LogBoxLog>,\n  selectedIndex: number,\n  fatalType?: ?LogLevel,\n|}>;\n\nfunction LogBoxInspector(props: Props): React.Node {\n  const {logs, selectedIndex} = props;\n  let log = logs[selectedIndex];\n\n  React.useEffect(() => {\n    if (log) {\n      LogBoxData.symbolicateLogNow(log);\n    }\n  }, [log]);\n\n  React.useEffect(() => {\n    // Optimistically symbolicate the last and next logs.\n    if (logs.length > 1) {\n      const selected = selectedIndex;\n      const lastIndex = logs.length - 1;\n      const prevIndex = selected - 1 < 0 ? lastIndex : selected - 1;\n      const nextIndex = selected + 1 > lastIndex ? 0 : selected + 1;\n      LogBoxData.symbolicateLogLazy(logs[prevIndex]);\n      LogBoxData.symbolicateLogLazy(logs[nextIndex]);\n    }\n  }, [logs, selectedIndex]);\n\n  React.useEffect(() => {\n    Keyboard.dismiss();\n  }, []);\n\n  function _handleRetry() {\n    LogBoxData.retrySymbolicateLogNow(log);\n  }\n\n  if (log == null) {\n    return null;\n  }\n\n  return (\n    <View style={styles.root}>\n      <LogBoxInspectorHeader\n        onSelectIndex={props.onChangeSelectedIndex}\n        selectedIndex={selectedIndex}\n        total={logs.length}\n        level={log.level}\n      />\n      <LogBoxInspectorBody log={log} onRetry={_handleRetry} />\n      <LogBoxInspectorFooter\n        onDismiss={props.onDismiss}\n        onMinimize={props.onMinimize}\n        level={log.level}\n      />\n    </View>\n  );\n}\n\nconst headerTitleMap = {\n  warn: 'Console Warning',\n  error: 'Console Error',\n  fatal: 'Uncaught Error',\n  syntax: 'Syntax Error',\n  component: 'Render Error',\n};\n\nfunction LogBoxInspectorBody(props) {\n  const [collapsed, setCollapsed] = React.useState(true);\n\n  React.useEffect(() => {\n    setCollapsed(true);\n  }, [props.log]);\n\n  const headerTitle =\n    props.log.type ??\n    headerTitleMap[props.log.isComponentError ? 'component' : props.log.level];\n\n  if (collapsed) {\n    return (\n      <>\n        <LogBoxInspectorMessageHeader\n          collapsed={collapsed}\n          onPress={() => setCollapsed(!collapsed)}\n          message={props.log.message}\n          level={props.log.level}\n          title={headerTitle}\n        />\n        <ScrollView style={styles.scrollBody}>\n          <LogBoxInspectorCodeFrame codeFrame={props.log.codeFrame} />\n          <LogBoxInspectorReactFrames log={props.log} />\n          <LogBoxInspectorStackFrames log={props.log} onRetry={props.onRetry} />\n        </ScrollView>\n      </>\n    );\n  }\n  return (\n    <ScrollView style={styles.scrollBody}>\n      <LogBoxInspectorMessageHeader\n        collapsed={collapsed}\n        onPress={() => setCollapsed(!collapsed)}\n        message={props.log.message}\n        level={props.log.level}\n        title={headerTitle}\n      />\n      <LogBoxInspectorCodeFrame codeFrame={props.log.codeFrame} />\n      <LogBoxInspectorReactFrames log={props.log} />\n      <LogBoxInspectorStackFrames log={props.log} onRetry={props.onRetry} />\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    backgroundColor: LogBoxStyle.getTextColor(),\n  },\n  scrollBody: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(0.9),\n    flex: 1,\n  },\n});\n\nexport default LogBoxInspector;\n"]},"metadata":{},"sourceType":"script"}