{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"../../StyleSheet/StyleSheet\"));\n\nvar _Platform = _interopRequireDefault(require(\"../../Utilities/Platform\"));\n\nvar _Text = _interopRequireDefault(require(\"../../Text/Text\"));\n\nvar _View = _interopRequireDefault(require(\"../../Components/View/View\"));\n\nvar _LogBoxButton = _interopRequireDefault(require(\"./LogBoxButton\"));\n\nvar LogBoxStyle = _interopRequireWildcard(require(\"./LogBoxStyle\"));\n\nvar _LogBoxInspectorSection = _interopRequireDefault(require(\"./LogBoxInspectorSection\"));\n\nvar _openFileInEditor = _interopRequireDefault(require(\"../../Core/Devtools/openFileInEditor\"));\n\nvar _jsxFileName = \"D:\\\\vsCodes\\\\friday\\\\personal_assist\\\\node_modules\\\\react-native\\\\Libraries\\\\LogBox\\\\UI\\\\LogBoxInspectorReactFrames.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar BEFORE_SLASH_RE = /^(.*)[\\\\/]/;\n\nfunction getPrettyFileName(path) {\n  var fileName = path.replace(BEFORE_SLASH_RE, '');\n\n  if (/^index\\./.test(fileName)) {\n    var match = path.match(BEFORE_SLASH_RE);\n\n    if (match) {\n      var pathBeforeSlash = match[1];\n\n      if (pathBeforeSlash) {\n        var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\n        fileName = folderName + '/â€‹' + fileName;\n      }\n    }\n  }\n\n  return fileName;\n}\n\nfunction LogBoxInspectorReactFrames(props) {\n  var _this = this;\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      collapsed = _React$useState2[0],\n      setCollapsed = _React$useState2[1];\n\n  if (props.log.componentStack == null || props.log.componentStack.length < 1) {\n    return null;\n  }\n\n  function getStackList() {\n    if (collapsed) {\n      return props.log.componentStack.slice(0, 3);\n    } else {\n      return props.log.componentStack;\n    }\n  }\n\n  function getCollapseMessage() {\n    if (props.log.componentStack.length <= 3) {\n      return;\n    }\n\n    var count = props.log.componentStack.length - 3;\n\n    if (collapsed) {\n      return \"See \" + count + \" more components\";\n    } else {\n      return \"Collapse \" + count + \" components\";\n    }\n  }\n\n  return React.createElement(_LogBoxInspectorSection.default, {\n    heading: \"Component Stack\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, getStackList().map(function (frame, index) {\n    return React.createElement(_View.default, {\n      key: index,\n      style: componentStyles.frameContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, React.createElement(_LogBoxButton.default, {\n      backgroundColor: {\n        default: 'transparent',\n        pressed: LogBoxStyle.getBackgroundColor(1)\n      },\n      onPress: frame.fileName.startsWith('/') ? function () {\n        var _frame$location$row, _frame$location;\n\n        return (0, _openFileInEditor.default)(frame.fileName, (_frame$location$row = (_frame$location = frame.location) == null ? void 0 : _frame$location.row) != null ? _frame$location$row : 1);\n      } : null,\n      style: componentStyles.frame,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, React.createElement(_View.default, {\n      style: componentStyles.component,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, React.createElement(_Text.default, {\n      style: componentStyles.frameName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, React.createElement(_Text.default, {\n      style: componentStyles.bracket,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, '<'), frame.content, React.createElement(_Text.default, {\n      style: componentStyles.bracket,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, ' />'))), React.createElement(_Text.default, {\n      style: componentStyles.frameLocation,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, getPrettyFileName(frame.fileName), frame.location ? \":\" + frame.location.row : '')));\n  }), React.createElement(_View.default, {\n    style: componentStyles.collapseContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, React.createElement(_LogBoxButton.default, {\n    backgroundColor: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getBackgroundColor(1)\n    },\n    onPress: function onPress() {\n      return setCollapsed(!collapsed);\n    },\n    style: componentStyles.collapseButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, React.createElement(_Text.default, {\n    style: componentStyles.collapse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, getCollapseMessage()))));\n}\n\nvar componentStyles = _StyleSheet.default.create({\n  collapseContainer: {\n    marginLeft: 15,\n    flexDirection: 'row'\n  },\n  collapseButton: {\n    borderRadius: 5\n  },\n  collapse: {\n    color: LogBoxStyle.getTextColor(0.7),\n    fontSize: 12,\n    fontWeight: '300',\n    lineHeight: 20,\n    marginTop: 0,\n    paddingVertical: 5,\n    paddingHorizontal: 10\n  },\n  frameContainer: {\n    flexDirection: 'row',\n    paddingHorizontal: 15\n  },\n  frame: {\n    flex: 1,\n    paddingVertical: 4,\n    paddingHorizontal: 10,\n    borderRadius: 5\n  },\n  component: {\n    flexDirection: 'row',\n    paddingRight: 10\n  },\n  frameName: {\n    fontFamily: _Platform.default.select({\n      android: 'monospace',\n      ios: 'Menlo'\n    }),\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    includeFontPadding: false,\n    lineHeight: 18\n  },\n  bracket: {\n    fontFamily: _Platform.default.select({\n      android: 'monospace',\n      ios: 'Menlo'\n    }),\n    color: LogBoxStyle.getTextColor(0.4),\n    fontSize: 14,\n    fontWeight: '500',\n    includeFontPadding: false,\n    lineHeight: 18\n  },\n  frameLocation: {\n    color: LogBoxStyle.getTextColor(0.7),\n    fontSize: 12,\n    fontWeight: '300',\n    includeFontPadding: false,\n    lineHeight: 16,\n    paddingLeft: 10\n  }\n});\n\nvar _default = LogBoxInspectorReactFrames;\nexports.default = _default;","map":{"version":3,"sources":["D:/vsCodes/friday/personal_assist/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspectorReactFrames.js"],"names":["BEFORE_SLASH_RE","getPrettyFileName","path","fileName","replace","test","match","pathBeforeSlash","folderName","LogBoxInspectorReactFrames","props","React","useState","collapsed","setCollapsed","log","componentStack","length","getStackList","slice","getCollapseMessage","count","map","frame","index","componentStyles","frameContainer","default","pressed","LogBoxStyle","getBackgroundColor","startsWith","location","row","component","frameName","bracket","content","frameLocation","collapseContainer","collapseButton","collapse","StyleSheet","create","marginLeft","flexDirection","borderRadius","color","getTextColor","fontSize","fontWeight","lineHeight","marginTop","paddingVertical","paddingHorizontal","flex","paddingRight","fontFamily","Platform","select","android","ios","includeFontPadding","paddingLeft"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport * as React from 'react';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Platform from '../../Utilities/Platform';\nimport Text from '../../Text/Text';\nimport View from '../../Components/View/View';\nimport LogBoxButton from './LogBoxButton';\nimport * as LogBoxStyle from './LogBoxStyle';\nimport LogBoxInspectorSection from './LogBoxInspectorSection';\nimport openFileInEditor from '../../Core/Devtools/openFileInEditor';\nimport type LogBoxLog from '../Data/LogBoxLog';\n\ntype Props = $ReadOnly<{|\n  log: LogBoxLog,\n|}>;\n\nconst BEFORE_SLASH_RE = /^(.*)[\\\\/]/;\n\n// Taken from React https://github.com/facebook/react/blob/206d61f72214e8ae5b935f0bf8628491cb7f0797/packages/react-devtools-shared/src/backend/describeComponentFrame.js#L27-L41\nfunction getPrettyFileName(path) {\n  let fileName = path.replace(BEFORE_SLASH_RE, '');\n\n  // In DEV, include code for a common special case:\n  // prefer \"folder/index.js\" instead of just \"index.js\".\n  if (/^index\\./.test(fileName)) {\n    const match = path.match(BEFORE_SLASH_RE);\n    if (match) {\n      const pathBeforeSlash = match[1];\n      if (pathBeforeSlash) {\n        const folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\n        // Note the below string contains a zero width space after the \"/\" character.\n        // This is to prevent browsers like Chrome from formatting the file name as a link.\n        // (Since this is a source link, it would not work to open the source file anyway.)\n        fileName = folderName + '/â€‹' + fileName;\n      }\n    }\n  }\n\n  return fileName;\n}\nfunction LogBoxInspectorReactFrames(props: Props): React.Node {\n  const [collapsed, setCollapsed] = React.useState(true);\n  if (props.log.componentStack == null || props.log.componentStack.length < 1) {\n    return null;\n  }\n\n  function getStackList() {\n    if (collapsed) {\n      return props.log.componentStack.slice(0, 3);\n    } else {\n      return props.log.componentStack;\n    }\n  }\n\n  function getCollapseMessage() {\n    if (props.log.componentStack.length <= 3) {\n      return;\n    }\n\n    const count = props.log.componentStack.length - 3;\n    if (collapsed) {\n      return `See ${count} more components`;\n    } else {\n      return `Collapse ${count} components`;\n    }\n  }\n\n  return (\n    <LogBoxInspectorSection heading=\"Component Stack\">\n      {getStackList().map((frame, index) => (\n        <View\n          // Unfortunately we don't have a unique identifier for stack traces.\n          key={index}\n          style={componentStyles.frameContainer}>\n          <LogBoxButton\n            backgroundColor={{\n              default: 'transparent',\n              pressed: LogBoxStyle.getBackgroundColor(1),\n            }}\n            onPress={\n              // Older versions of DevTools do not provide full path.\n              // This will not work on Windows, remove check once the\n              // DevTools return the full file path.\n              frame.fileName.startsWith('/')\n                ? () =>\n                    openFileInEditor(frame.fileName, frame.location?.row ?? 1)\n                : null\n            }\n            style={componentStyles.frame}>\n            <View style={componentStyles.component}>\n              <Text style={componentStyles.frameName}>\n                <Text style={componentStyles.bracket}>{'<'}</Text>\n                {frame.content}\n                <Text style={componentStyles.bracket}>{' />'}</Text>\n              </Text>\n            </View>\n            <Text style={componentStyles.frameLocation}>\n              {getPrettyFileName(frame.fileName)}\n              {frame.location ? `:${frame.location.row}` : ''}\n            </Text>\n          </LogBoxButton>\n        </View>\n      ))}\n      <View style={componentStyles.collapseContainer}>\n        <LogBoxButton\n          backgroundColor={{\n            default: 'transparent',\n            pressed: LogBoxStyle.getBackgroundColor(1),\n          }}\n          onPress={() => setCollapsed(!collapsed)}\n          style={componentStyles.collapseButton}>\n          <Text style={componentStyles.collapse}>{getCollapseMessage()}</Text>\n        </LogBoxButton>\n      </View>\n    </LogBoxInspectorSection>\n  );\n}\n\nconst componentStyles = StyleSheet.create({\n  collapseContainer: {\n    marginLeft: 15,\n    flexDirection: 'row',\n  },\n  collapseButton: {\n    borderRadius: 5,\n  },\n  collapse: {\n    color: LogBoxStyle.getTextColor(0.7),\n    fontSize: 12,\n    fontWeight: '300',\n    lineHeight: 20,\n    marginTop: 0,\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n  },\n  frameContainer: {\n    flexDirection: 'row',\n    paddingHorizontal: 15,\n  },\n  frame: {\n    flex: 1,\n    paddingVertical: 4,\n    paddingHorizontal: 10,\n    borderRadius: 5,\n  },\n  component: {\n    flexDirection: 'row',\n    paddingRight: 10,\n  },\n  frameName: {\n    fontFamily: Platform.select({android: 'monospace', ios: 'Menlo'}),\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    includeFontPadding: false,\n    lineHeight: 18,\n  },\n  bracket: {\n    fontFamily: Platform.select({android: 'monospace', ios: 'Menlo'}),\n    color: LogBoxStyle.getTextColor(0.4),\n    fontSize: 14,\n    fontWeight: '500',\n    includeFontPadding: false,\n    lineHeight: 18,\n  },\n  frameLocation: {\n    color: LogBoxStyle.getTextColor(0.7),\n    fontSize: 12,\n    fontWeight: '300',\n    includeFontPadding: false,\n    lineHeight: 16,\n    paddingLeft: 10,\n  },\n});\n\nexport default LogBoxInspectorReactFrames;\n"]},"metadata":{},"sourceType":"script"}