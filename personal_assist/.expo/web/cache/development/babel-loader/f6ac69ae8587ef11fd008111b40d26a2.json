{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports._LogBoxInspectorContainer = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar LogBoxData = _interopRequireWildcard(require(\"./Data/LogBoxData\"));\n\nvar _LogBoxInspector = _interopRequireDefault(require(\"./UI/LogBoxInspector\"));\n\nvar _jsxFileName = \"D:\\\\vsCodes\\\\friday\\\\personal_assist\\\\node_modules\\\\react-native\\\\Libraries\\\\LogBox\\\\LogBoxInspectorContainer.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar _LogBoxInspectorContainer = function (_React$Component) {\n  (0, _inherits2.default)(_LogBoxInspectorContainer, _React$Component);\n\n  var _super = _createSuper(_LogBoxInspectorContainer);\n\n  function _LogBoxInspectorContainer() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, _LogBoxInspectorContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this._handleDismiss = function () {\n      var _this$props = _this.props,\n          selectedLogIndex = _this$props.selectedLogIndex,\n          logs = _this$props.logs;\n      var logsArray = Array.from(logs);\n\n      if (selectedLogIndex != null) {\n        if (logsArray.length - 1 <= 0) {\n          LogBoxData.setSelectedLog(-1);\n        } else if (selectedLogIndex >= logsArray.length - 1) {\n          LogBoxData.setSelectedLog(selectedLogIndex - 1);\n        }\n\n        LogBoxData.dismiss(logsArray[selectedLogIndex]);\n      }\n    };\n\n    _this._handleMinimize = function () {\n      LogBoxData.setSelectedLog(-1);\n    };\n\n    _this._handleSetSelectedLog = function (index) {\n      LogBoxData.setSelectedLog(index);\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(_LogBoxInspectorContainer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(_reactNative.View, {\n        style: _reactNative.StyleSheet.absoluteFill,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }\n      }, React.createElement(_LogBoxInspector.default, {\n        onDismiss: this._handleDismiss,\n        onMinimize: this._handleMinimize,\n        onChangeSelectedIndex: this._handleSetSelectedLog,\n        logs: this.props.logs,\n        selectedIndex: this.props.selectedLogIndex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n  return _LogBoxInspectorContainer;\n}(React.Component);\n\nexports._LogBoxInspectorContainer = _LogBoxInspectorContainer;\n\nvar _default = LogBoxData.withSubscription(_LogBoxInspectorContainer);\n\nexports.default = _default;","map":{"version":3,"sources":["D:/vsCodes/friday/personal_assist/node_modules/react-native/Libraries/LogBox/LogBoxInspectorContainer.js"],"names":["_LogBoxInspectorContainer","_handleDismiss","props","selectedLogIndex","logs","logsArray","Array","from","length","LogBoxData","setSelectedLog","dismiss","_handleMinimize","_handleSetSelectedLog","index","StyleSheet","absoluteFill","React","Component","withSubscription"],"mappings":";;;;;;;;;;;;;;;;;AAUA;;AACA;;AACA;;AACA;;;;;;;;;;;;IASaA,yB;;;;;;;;;;;;;;;;UAeXC,c,GAAiB,YAAY;AAI3B,wBAAiC,MAAKC,KAAtC;AAAA,UAAOC,gBAAP,eAAOA,gBAAP;AAAA,UAAyBC,IAAzB,eAAyBA,IAAzB;AACA,UAAMC,SAAS,GAAGC,KAAK,CAACC,IAAN,CAAWH,IAAX,CAAlB;;AACA,UAAID,gBAAgB,IAAI,IAAxB,EAA8B;AAC5B,YAAIE,SAAS,CAACG,MAAV,GAAmB,CAAnB,IAAwB,CAA5B,EAA+B;AAC7BC,UAAAA,UAAU,CAACC,cAAX,CAA0B,CAAC,CAA3B;AACD,SAFD,MAEO,IAAIP,gBAAgB,IAAIE,SAAS,CAACG,MAAV,GAAmB,CAA3C,EAA8C;AACnDC,UAAAA,UAAU,CAACC,cAAX,CAA0BP,gBAAgB,GAAG,CAA7C;AACD;;AAEDM,QAAAA,UAAU,CAACE,OAAX,CAAmBN,SAAS,CAACF,gBAAD,CAA5B;AACD;AACF,K;;UAEDS,e,GAAkB,YAAY;AAC5BH,MAAAA,UAAU,CAACC,cAAX,CAA0B,CAAC,CAA3B;AACD,K;;UAEDG,qB,GAAwB,UAACC,KAAD,EAAyB;AAC/CL,MAAAA,UAAU,CAACC,cAAX,CAA0BI,KAA1B;AACD,K;;;;;;;WArCD,kBAAqB;AACnB,aACE,oBAAC,iBAAD;AAAM,QAAA,KAAK,EAAEC,wBAAWC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,wBAAD;AACE,QAAA,SAAS,EAAE,KAAKf,cADlB;AAEE,QAAA,UAAU,EAAE,KAAKW,eAFnB;AAGE,QAAA,qBAAqB,EAAE,KAAKC,qBAH9B;AAIE,QAAA,IAAI,EAAE,KAAKX,KAAL,CAAWE,IAJnB;AAKE,QAAA,aAAa,EAAE,KAAKF,KAAL,CAAWC,gBAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAWD;;;EAb4Cc,KAAK,CAACC,S;;;;eAyCrCT,UAAU,CAACU,gBAAX,CACdnB,yBADc,C","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport * as React from 'react';\nimport {View, StyleSheet} from 'react-native';\nimport * as LogBoxData from './Data/LogBoxData';\nimport LogBoxInspector from './UI/LogBoxInspector';\nimport type LogBoxLog from './Data/LogBoxLog';\n\ntype Props = $ReadOnly<{|\n  logs: $ReadOnlyArray<LogBoxLog>,\n  selectedLogIndex: number,\n  isDisabled?: ?boolean,\n|}>;\n\nexport class _LogBoxInspectorContainer extends React.Component<Props> {\n  render(): React.Node {\n    return (\n      <View style={StyleSheet.absoluteFill}>\n        <LogBoxInspector\n          onDismiss={this._handleDismiss}\n          onMinimize={this._handleMinimize}\n          onChangeSelectedIndex={this._handleSetSelectedLog}\n          logs={this.props.logs}\n          selectedIndex={this.props.selectedLogIndex}\n        />\n      </View>\n    );\n  }\n\n  _handleDismiss = (): void => {\n    // Here we handle the cases when the log is dismissed and it\n    // was either the last log, or when the current index\n    // is now outside the bounds of the log array.\n    const {selectedLogIndex, logs} = this.props;\n    const logsArray = Array.from(logs);\n    if (selectedLogIndex != null) {\n      if (logsArray.length - 1 <= 0) {\n        LogBoxData.setSelectedLog(-1);\n      } else if (selectedLogIndex >= logsArray.length - 1) {\n        LogBoxData.setSelectedLog(selectedLogIndex - 1);\n      }\n\n      LogBoxData.dismiss(logsArray[selectedLogIndex]);\n    }\n  };\n\n  _handleMinimize = (): void => {\n    LogBoxData.setSelectedLog(-1);\n  };\n\n  _handleSetSelectedLog = (index: number): void => {\n    LogBoxData.setSelectedLog(index);\n  };\n}\n\nexport default (LogBoxData.withSubscription(\n  _LogBoxInspectorContainer,\n): React.AbstractComponent<{||}>);\n"]},"metadata":{},"sourceType":"script"}