{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _Platform = _interopRequireDefault(require(\"../../Utilities/Platform\"));\n\nvar _ScrollView = _interopRequireDefault(require(\"../../Components/ScrollView/ScrollView\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"../../StyleSheet/StyleSheet\"));\n\nvar _Text = _interopRequireDefault(require(\"../../Text/Text\"));\n\nvar _View = _interopRequireDefault(require(\"../../Components/View/View\"));\n\nvar LogBoxStyle = _interopRequireWildcard(require(\"./LogBoxStyle\"));\n\nvar _LogBoxButton = _interopRequireDefault(require(\"./LogBoxButton\"));\n\nvar _openFileInEditor = _interopRequireDefault(require(\"../../Core/Devtools/openFileInEditor\"));\n\nvar _AnsiHighlight = _interopRequireDefault(require(\"./AnsiHighlight\"));\n\nvar _LogBoxInspectorSection = _interopRequireDefault(require(\"./LogBoxInspectorSection\"));\n\nvar LogBoxData = _interopRequireWildcard(require(\"../Data/LogBoxData\"));\n\nvar _jsxFileName = \"D:\\\\vsCodes\\\\friday\\\\personal_assist\\\\node_modules\\\\react-native\\\\Libraries\\\\LogBox\\\\UI\\\\LogBoxInspectorCodeFrame.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction LogBoxInspectorCodeFrame(props) {\n  var codeFrame = props.codeFrame;\n\n  if (codeFrame == null) {\n    return null;\n  }\n\n  function getFileName() {\n    var matches = /[^/]*$/.exec(codeFrame.fileName);\n\n    if (matches && matches.length > 0) {\n      return matches[0];\n    }\n\n    return codeFrame.fileName;\n  }\n\n  function getLocation() {\n    var location = codeFrame.location;\n\n    if (location != null) {\n      return \" (\" + location.row + \":\" + (location.column + 1) + \")\";\n    }\n\n    return null;\n  }\n\n  return React.createElement(_LogBoxInspectorSection.default, {\n    heading: \"Source\",\n    action: React.createElement(AppInfo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 54\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, React.createElement(_View.default, {\n    style: styles.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, React.createElement(_View.default, {\n    style: styles.frame,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, React.createElement(_ScrollView.default, {\n    horizontal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, React.createElement(_AnsiHighlight.default, {\n    style: styles.content,\n    text: codeFrame.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }))), React.createElement(_LogBoxButton.default, {\n    backgroundColor: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getBackgroundDarkColor(1)\n    },\n    style: styles.button,\n    onPress: function onPress() {\n      var _codeFrame$location$r, _codeFrame$location;\n\n      (0, _openFileInEditor.default)(codeFrame.fileName, (_codeFrame$location$r = (_codeFrame$location = codeFrame.location) == null ? void 0 : _codeFrame$location.row) != null ? _codeFrame$location$r : 0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, React.createElement(_Text.default, {\n    style: styles.fileText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, getFileName(), getLocation()))));\n}\n\nfunction AppInfo() {\n  var appInfo = LogBoxData.getAppInfo();\n\n  if (appInfo == null) {\n    return null;\n  }\n\n  return React.createElement(_LogBoxButton.default, {\n    backgroundColor: {\n      default: 'transparent',\n      pressed: appInfo.onPress ? LogBoxStyle.getBackgroundColor(1) : 'transparent'\n    },\n    style: appInfoStyles.buildButton,\n    onPress: appInfo.onPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, React.createElement(_Text.default, {\n    style: appInfoStyles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, appInfo.appVersion, \" (\", appInfo.engine, \")\"));\n}\n\nvar appInfoStyles = _StyleSheet.default.create({\n  text: {\n    color: LogBoxStyle.getTextColor(0.4),\n    fontSize: 12,\n    lineHeight: 12\n  },\n  buildButton: {\n    flex: 0,\n    flexGrow: 0,\n    paddingVertical: 4,\n    paddingHorizontal: 5,\n    borderRadius: 5,\n    marginRight: -8\n  }\n});\n\nvar styles = _StyleSheet.default.create({\n  box: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(),\n    marginLeft: 10,\n    marginRight: 10,\n    marginTop: 5,\n    borderRadius: 3\n  },\n  frame: {\n    padding: 10,\n    borderBottomColor: LogBoxStyle.getTextColor(0.1),\n    borderBottomWidth: 1\n  },\n  button: {\n    paddingTop: 10,\n    paddingBottom: 10\n  },\n  content: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 20,\n    fontFamily: _Platform.default.select({\n      android: 'monospace',\n      ios: 'Menlo'\n    })\n  },\n  fileText: {\n    color: LogBoxStyle.getTextColor(0.5),\n    textAlign: 'center',\n    flex: 1,\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 16,\n    fontFamily: _Platform.default.select({\n      android: 'monospace',\n      ios: 'Menlo'\n    })\n  }\n});\n\nvar _default = LogBoxInspectorCodeFrame;\nexports.default = _default;","map":{"version":3,"sources":["D:/vsCodes/friday/personal_assist/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspectorCodeFrame.js"],"names":["LogBoxInspectorCodeFrame","props","codeFrame","getFileName","matches","exec","fileName","length","getLocation","location","row","column","styles","box","frame","content","default","pressed","LogBoxStyle","getBackgroundDarkColor","button","fileText","AppInfo","appInfo","LogBoxData","getAppInfo","onPress","getBackgroundColor","appInfoStyles","buildButton","text","appVersion","engine","StyleSheet","create","color","getTextColor","fontSize","lineHeight","flex","flexGrow","paddingVertical","paddingHorizontal","borderRadius","marginRight","backgroundColor","marginLeft","marginTop","padding","borderBottomColor","borderBottomWidth","paddingTop","paddingBottom","includeFontPadding","fontFamily","Platform","select","android","ios","textAlign"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport * as React from 'react';\nimport Platform from '../../Utilities/Platform';\nimport ScrollView from '../../Components/ScrollView/ScrollView';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Text from '../../Text/Text';\nimport View from '../../Components/View/View';\nimport * as LogBoxStyle from './LogBoxStyle';\nimport type {CodeFrame} from '../Data/parseLogBoxLog';\nimport LogBoxButton from './LogBoxButton';\nimport openFileInEditor from '../../Core/Devtools/openFileInEditor';\nimport AnsiHighlight from './AnsiHighlight';\nimport LogBoxInspectorSection from './LogBoxInspectorSection';\nimport * as LogBoxData from '../Data/LogBoxData';\ntype Props = $ReadOnly<{|\n  codeFrame: ?CodeFrame,\n|}>;\n\nfunction LogBoxInspectorCodeFrame(props: Props): React.Node {\n  const codeFrame = props.codeFrame;\n  if (codeFrame == null) {\n    return null;\n  }\n\n  function getFileName() {\n    const matches = /[^/]*$/.exec(codeFrame.fileName);\n    if (matches && matches.length > 0) {\n      return matches[0];\n    }\n\n    return codeFrame.fileName;\n  }\n\n  function getLocation() {\n    const location = codeFrame.location;\n    if (location != null) {\n      return ` (${location.row}:${\n        location.column + 1 /* Code frame columns are zero indexed */\n      })`;\n    }\n\n    return null;\n  }\n\n  return (\n    <LogBoxInspectorSection heading=\"Source\" action={<AppInfo />}>\n      <View style={styles.box}>\n        <View style={styles.frame}>\n          <ScrollView horizontal>\n            <AnsiHighlight style={styles.content} text={codeFrame.content} />\n          </ScrollView>\n        </View>\n        <LogBoxButton\n          backgroundColor={{\n            default: 'transparent',\n            pressed: LogBoxStyle.getBackgroundDarkColor(1),\n          }}\n          style={styles.button}\n          onPress={() => {\n            openFileInEditor(codeFrame.fileName, codeFrame.location?.row ?? 0);\n          }}>\n          <Text style={styles.fileText}>\n            {getFileName()}\n            {getLocation()}\n          </Text>\n        </LogBoxButton>\n      </View>\n    </LogBoxInspectorSection>\n  );\n}\n\nfunction AppInfo() {\n  const appInfo = LogBoxData.getAppInfo();\n  if (appInfo == null) {\n    return null;\n  }\n\n  return (\n    <LogBoxButton\n      backgroundColor={{\n        default: 'transparent',\n        pressed: appInfo.onPress\n          ? LogBoxStyle.getBackgroundColor(1)\n          : 'transparent',\n      }}\n      style={appInfoStyles.buildButton}\n      onPress={appInfo.onPress}>\n      <Text style={appInfoStyles.text}>\n        {appInfo.appVersion} ({appInfo.engine})\n      </Text>\n    </LogBoxButton>\n  );\n}\n\nconst appInfoStyles = StyleSheet.create({\n  text: {\n    color: LogBoxStyle.getTextColor(0.4),\n    fontSize: 12,\n    lineHeight: 12,\n  },\n  buildButton: {\n    flex: 0,\n    flexGrow: 0,\n    paddingVertical: 4,\n    paddingHorizontal: 5,\n    borderRadius: 5,\n    marginRight: -8,\n  },\n});\n\nconst styles = StyleSheet.create({\n  box: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(),\n    marginLeft: 10,\n    marginRight: 10,\n    marginTop: 5,\n    borderRadius: 3,\n  },\n  frame: {\n    padding: 10,\n    borderBottomColor: LogBoxStyle.getTextColor(0.1),\n    borderBottomWidth: 1,\n  },\n  button: {\n    paddingTop: 10,\n    paddingBottom: 10,\n  },\n  content: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 20,\n    fontFamily: Platform.select({android: 'monospace', ios: 'Menlo'}),\n  },\n  fileText: {\n    color: LogBoxStyle.getTextColor(0.5),\n    textAlign: 'center',\n    flex: 1,\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 16,\n    fontFamily: Platform.select({android: 'monospace', ios: 'Menlo'}),\n  },\n});\n\nexport default LogBoxInspectorCodeFrame;\n"]},"metadata":{},"sourceType":"script"}