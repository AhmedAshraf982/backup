{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _GlobalPerformanceLogger = _interopRequireDefault(require(\"../Utilities/GlobalPerformanceLogger\"));\n\nvar _PerformanceLoggerContext = _interopRequireDefault(require(\"../Utilities/PerformanceLoggerContext\"));\n\nvar _getCachedComponentWithDebugName = _interopRequireDefault(require(\"./getCachedComponentWithDebugName\"));\n\nvar _jsxFileName = \"D:\\\\vsCodes\\\\friday\\\\personal_assist\\\\node_modules\\\\react-native\\\\Libraries\\\\ReactNative\\\\renderApplication.js\";\n\nvar AppContainer = require('./AppContainer');\n\nvar React = require('react');\n\nvar invariant = require('invariant');\n\nrequire('../Utilities/BackHandler');\n\nfunction renderApplication(RootComponent, initialProps, rootTag, WrapperComponent, fabric, showArchitectureIndicator, scopedPerformanceLogger, isLogBox, debugName, displayMode, useConcurrentRoot) {\n  invariant(rootTag, 'Expect to have a valid rootTag, instead got ', rootTag);\n  var performanceLogger = scopedPerformanceLogger != null ? scopedPerformanceLogger : _GlobalPerformanceLogger.default;\n  var renderable = React.createElement(_PerformanceLoggerContext.default.Provider, {\n    value: performanceLogger,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, React.createElement(AppContainer, {\n    rootTag: rootTag,\n    fabric: fabric,\n    showArchitectureIndicator: showArchitectureIndicator,\n    WrapperComponent: WrapperComponent,\n    initialProps: initialProps != null ? initialProps : Object.freeze({}),\n    internal_excludeLogBox: isLogBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, React.createElement(RootComponent, (0, _extends2.default)({}, initialProps, {\n    rootTag: rootTag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }))));\n\n  if (__DEV__ && debugName) {\n    var RootComponentWithMeaningfulName = (0, _getCachedComponentWithDebugName.default)(debugName + \"(RootComponent)\");\n    renderable = React.createElement(RootComponentWithMeaningfulName, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, renderable);\n  }\n\n  performanceLogger.startTimespan('renderApplication_React_render');\n  performanceLogger.setExtra('usedReactFabric', fabric ? '1' : '0');\n\n  if (fabric) {\n    require('../Renderer/shims/ReactFabric').render(renderable, rootTag, null, useConcurrentRoot);\n  } else {\n    require('../Renderer/shims/ReactNative').render(renderable, rootTag);\n  }\n\n  performanceLogger.stopTimespan('renderApplication_React_render');\n}\n\nmodule.exports = renderApplication;","map":{"version":3,"sources":["D:/vsCodes/friday/personal_assist/node_modules/react-native/Libraries/ReactNative/renderApplication.js"],"names":["AppContainer","require","React","invariant","renderApplication","RootComponent","initialProps","rootTag","WrapperComponent","fabric","showArchitectureIndicator","scopedPerformanceLogger","isLogBox","debugName","displayMode","useConcurrentRoot","performanceLogger","GlobalPerformanceLogger","renderable","Object","freeze","__DEV__","RootComponentWithMeaningfulName","startTimespan","setExtra","render","stopTimespan","module","exports"],"mappings":";;;;AAWA;;AAEA;;AAEA;;;;AALA,IAAMA,YAAY,GAAGC,OAAO,CAAC,gBAAD,CAA5B;;AAMA,IAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAME,SAAS,GAAGF,OAAO,CAAC,WAAD,CAAzB;;AAGAA,OAAO,CAAC,0BAAD,CAAP;;AAEA,SAASG,iBAAT,CACEC,aADF,EAEEC,YAFF,EAGEC,OAHF,EAIEC,gBAJF,EAKEC,MALF,EAMEC,yBANF,EAOEC,uBAPF,EAQEC,QARF,EASEC,SATF,EAUEC,WAVF,EAWEC,iBAXF,EAYE;AACAZ,EAAAA,SAAS,CAACI,OAAD,EAAU,8CAAV,EAA0DA,OAA1D,CAAT;AAEA,MAAMS,iBAAiB,GAAGL,uBAAH,WAAGA,uBAAH,GAA8BM,gCAArD;AAEA,MAAIC,UAAU,GACZ,oBAAC,iCAAD,CAA0B,QAA1B;AAAmC,IAAA,KAAK,EAAEF,iBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AACE,IAAA,OAAO,EAAET,OADX;AAEE,IAAA,MAAM,EAAEE,MAFV;AAGE,IAAA,yBAAyB,EAAEC,yBAH7B;AAIE,IAAA,gBAAgB,EAAEF,gBAJpB;AAKE,IAAA,YAAY,EAAEF,YAAF,WAAEA,YAAF,GAAkBa,MAAM,CAACC,MAAP,CAAc,EAAd,CALhC;AAME,IAAA,sBAAsB,EAAER,QAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,aAAD,6BAAmBN,YAAnB;AAAiC,IAAA,OAAO,EAAEC,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAPF,CADF,CADF;;AAcA,MAAIc,OAAO,IAAIR,SAAf,EAA0B;AACxB,QAAMS,+BAA+B,GAAG,8CACnCT,SADmC,qBAAxC;AAGAK,IAAAA,UAAU,GACR,oBAAC,+BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,UADH,CADF;AAKD;;AAEDF,EAAAA,iBAAiB,CAACO,aAAlB,CAAgC,gCAAhC;AACAP,EAAAA,iBAAiB,CAACQ,QAAlB,CAA2B,iBAA3B,EAA8Cf,MAAM,GAAG,GAAH,GAAS,GAA7D;;AACA,MAAIA,MAAJ,EAAY;AACVR,IAAAA,OAAO,CAAC,+BAAD,CAAP,CAAyCwB,MAAzC,CACEP,UADF,EAEEX,OAFF,EAGE,IAHF,EAIEQ,iBAJF;AAMD,GAPD,MAOO;AACLd,IAAAA,OAAO,CAAC,+BAAD,CAAP,CAAyCwB,MAAzC,CAAgDP,UAAhD,EAA4DX,OAA5D;AACD;;AACDS,EAAAA,iBAAiB,CAACU,YAAlB,CAA+B,gCAA/B;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBxB,iBAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nconst AppContainer = require('./AppContainer');\nimport GlobalPerformanceLogger from '../Utilities/GlobalPerformanceLogger';\nimport type {IPerformanceLogger} from '../Utilities/createPerformanceLogger';\nimport PerformanceLoggerContext from '../Utilities/PerformanceLoggerContext';\nimport type {DisplayModeType} from './DisplayMode';\nimport getCachedComponentWithDebugName from './getCachedComponentWithDebugName';\nconst React = require('react');\n\nconst invariant = require('invariant');\n\n// require BackHandler so it sets the default handler that exits the app if no listeners respond\nrequire('../Utilities/BackHandler');\n\nfunction renderApplication<Props: Object>(\n  RootComponent: React.ComponentType<Props>,\n  initialProps: Props,\n  rootTag: any,\n  WrapperComponent?: ?React.ComponentType<any>,\n  fabric?: boolean,\n  showArchitectureIndicator?: boolean,\n  scopedPerformanceLogger?: IPerformanceLogger,\n  isLogBox?: boolean,\n  debugName?: string,\n  displayMode?: ?DisplayModeType,\n  useConcurrentRoot?: boolean,\n) {\n  invariant(rootTag, 'Expect to have a valid rootTag, instead got ', rootTag);\n\n  const performanceLogger = scopedPerformanceLogger ?? GlobalPerformanceLogger;\n\n  let renderable = (\n    <PerformanceLoggerContext.Provider value={performanceLogger}>\n      <AppContainer\n        rootTag={rootTag}\n        fabric={fabric}\n        showArchitectureIndicator={showArchitectureIndicator}\n        WrapperComponent={WrapperComponent}\n        initialProps={initialProps ?? Object.freeze({})}\n        internal_excludeLogBox={isLogBox}>\n        <RootComponent {...initialProps} rootTag={rootTag} />\n      </AppContainer>\n    </PerformanceLoggerContext.Provider>\n  );\n\n  if (__DEV__ && debugName) {\n    const RootComponentWithMeaningfulName = getCachedComponentWithDebugName(\n      `${debugName}(RootComponent)`,\n    );\n    renderable = (\n      <RootComponentWithMeaningfulName>\n        {renderable}\n      </RootComponentWithMeaningfulName>\n    );\n  }\n\n  performanceLogger.startTimespan('renderApplication_React_render');\n  performanceLogger.setExtra('usedReactFabric', fabric ? '1' : '0');\n  if (fabric) {\n    require('../Renderer/shims/ReactFabric').render(\n      renderable,\n      rootTag,\n      null,\n      useConcurrentRoot,\n    );\n  } else {\n    require('../Renderer/shims/ReactNative').render(renderable, rootTag);\n  }\n  performanceLogger.stopTimespan('renderApplication_React_render');\n}\n\nmodule.exports = renderApplication;\n"]},"metadata":{},"sourceType":"script"}