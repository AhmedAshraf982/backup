{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar TurboModuleRegistry = _interopRequireWildcard(require(\"../TurboModule/TurboModuleRegistry\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar NativeModule = TurboModuleRegistry.get('BlobModule');\nvar constants = null;\nvar NativeBlobModule = null;\n\nif (NativeModule != null) {\n  NativeBlobModule = {\n    getConstants: function getConstants() {\n      if (constants == null) {\n        constants = NativeModule.getConstants();\n      }\n\n      return constants;\n    },\n    addNetworkingHandler: function addNetworkingHandler() {\n      NativeModule.addNetworkingHandler();\n    },\n    addWebSocketHandler: function addWebSocketHandler(id) {\n      NativeModule.addWebSocketHandler(id);\n    },\n    removeWebSocketHandler: function removeWebSocketHandler(id) {\n      NativeModule.removeWebSocketHandler(id);\n    },\n    sendOverSocket: function sendOverSocket(blob, socketID) {\n      NativeModule.sendOverSocket(blob, socketID);\n    },\n    createFromParts: function createFromParts(parts, withId) {\n      NativeModule.createFromParts(parts, withId);\n    },\n    release: function release(blobId) {\n      NativeModule.release(blobId);\n    }\n  };\n}\n\nvar _default = NativeBlobModule;\nexports.default = _default;","map":{"version":3,"sources":["D:/vsCodes/friday/personal_assist/node_modules/react-native/Libraries/Blob/NativeBlobModule.js"],"names":["NativeModule","TurboModuleRegistry","get","constants","NativeBlobModule","getConstants","addNetworkingHandler","addWebSocketHandler","id","removeWebSocketHandler","sendOverSocket","blob","socketID","createFromParts","parts","withId","release","blobId"],"mappings":";;;;;AAWA;;;;;;AAYA,IAAMA,YAAY,GAAGC,mBAAmB,CAACC,GAApB,CAA8B,YAA9B,CAArB;AAEA,IAAIC,SAAS,GAAG,IAAhB;AACA,IAAIC,gBAAgB,GAAG,IAAvB;;AAEA,IAAIJ,YAAY,IAAI,IAApB,EAA0B;AACxBI,EAAAA,gBAAgB,GAAG;AACjBC,IAAAA,YADiB,0BACoD;AACnE,UAAIF,SAAS,IAAI,IAAjB,EAAuB;AACrBA,QAAAA,SAAS,GAAGH,YAAY,CAACK,YAAb,EAAZ;AACD;;AACD,aAAOF,SAAP;AACD,KANgB;AAOjBG,IAAAA,oBAPiB,kCAOY;AAC3BN,MAAAA,YAAY,CAACM,oBAAb;AACD,KATgB;AAUjBC,IAAAA,mBAViB,+BAUGC,EAVH,EAUqB;AACpCR,MAAAA,YAAY,CAACO,mBAAb,CAAiCC,EAAjC;AACD,KAZgB;AAajBC,IAAAA,sBAbiB,kCAaMD,EAbN,EAawB;AACvCR,MAAAA,YAAY,CAACS,sBAAb,CAAoCD,EAApC;AACD,KAfgB;AAgBjBE,IAAAA,cAhBiB,0BAgBFC,IAhBE,EAgBYC,QAhBZ,EAgBoC;AACnDZ,MAAAA,YAAY,CAACU,cAAb,CAA4BC,IAA5B,EAAkCC,QAAlC;AACD,KAlBgB;AAmBjBC,IAAAA,eAnBiB,2BAmBDC,KAnBC,EAmBqBC,MAnBrB,EAmB2C;AAC1Df,MAAAA,YAAY,CAACa,eAAb,CAA6BC,KAA7B,EAAoCC,MAApC;AACD,KArBgB;AAsBjBC,IAAAA,OAtBiB,mBAsBTC,MAtBS,EAsBa;AAC5BjB,MAAAA,YAAY,CAACgB,OAAb,CAAqBC,MAArB;AACD;AAxBgB,GAAnB;AA0BD;;eAEeb,gB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {TurboModule} from '../TurboModule/RCTExport';\nimport * as TurboModuleRegistry from '../TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => {|BLOB_URI_SCHEME: ?string, BLOB_URI_HOST: ?string|};\n  +addNetworkingHandler: () => void;\n  +addWebSocketHandler: (id: number) => void;\n  +removeWebSocketHandler: (id: number) => void;\n  +sendOverSocket: (blob: Object, socketID: number) => void;\n  +createFromParts: (parts: Array<Object>, withId: string) => void;\n  +release: (blobId: string) => void;\n}\n\nconst NativeModule = TurboModuleRegistry.get<Spec>('BlobModule');\n\nlet constants = null;\nlet NativeBlobModule = null;\n\nif (NativeModule != null) {\n  NativeBlobModule = {\n    getConstants(): {|BLOB_URI_SCHEME: ?string, BLOB_URI_HOST: ?string|} {\n      if (constants == null) {\n        constants = NativeModule.getConstants();\n      }\n      return constants;\n    },\n    addNetworkingHandler(): void {\n      NativeModule.addNetworkingHandler();\n    },\n    addWebSocketHandler(id: number): void {\n      NativeModule.addWebSocketHandler(id);\n    },\n    removeWebSocketHandler(id: number): void {\n      NativeModule.removeWebSocketHandler(id);\n    },\n    sendOverSocket(blob: Object, socketID: number): void {\n      NativeModule.sendOverSocket(blob, socketID);\n    },\n    createFromParts(parts: Array<Object>, withId: string): void {\n      NativeModule.createFromParts(parts, withId);\n    },\n    release(blobId: string): void {\n      NativeModule.release(blobId);\n    },\n  };\n}\n\nexport default (NativeBlobModule: ?Spec);\n"]},"metadata":{},"sourceType":"script"}