{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VirtualizedListCellContextProvider = VirtualizedListCellContextProvider;\nexports.VirtualizedListContext = void 0;\nexports.VirtualizedListContextProvider = VirtualizedListContextProvider;\nexports.VirtualizedListContextResetter = VirtualizedListContextResetter;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _jsxFileName = \"D:\\\\vsCodes\\\\friday\\\\personal_assist\\\\node_modules\\\\react-native\\\\Libraries\\\\Lists\\\\VirtualizedListContext.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar VirtualizedListContext = React.createContext(null);\nexports.VirtualizedListContext = VirtualizedListContext;\n\nif (__DEV__) {\n  VirtualizedListContext.displayName = 'VirtualizedListContext';\n}\n\nfunction VirtualizedListContextResetter(_ref) {\n  var children = _ref.children;\n  return React.createElement(VirtualizedListContext.Provider, {\n    value: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nfunction VirtualizedListContextProvider(_ref2) {\n  var children = _ref2.children,\n      value = _ref2.value;\n  var context = (0, React.useMemo)(function () {\n    return {\n      cellKey: null,\n      getScrollMetrics: value.getScrollMetrics,\n      horizontal: value.horizontal,\n      getOutermostParentListRef: value.getOutermostParentListRef,\n      getNestedChildState: value.getNestedChildState,\n      registerAsNestedChild: value.registerAsNestedChild,\n      unregisterAsNestedChild: value.unregisterAsNestedChild,\n      debugInfo: {\n        cellKey: value.debugInfo.cellKey,\n        horizontal: value.debugInfo.horizontal,\n        listKey: value.debugInfo.listKey,\n        parent: value.debugInfo.parent\n      }\n    };\n  }, [value.getScrollMetrics, value.horizontal, value.getOutermostParentListRef, value.getNestedChildState, value.registerAsNestedChild, value.unregisterAsNestedChild, value.debugInfo.cellKey, value.debugInfo.horizontal, value.debugInfo.listKey, value.debugInfo.parent]);\n  return React.createElement(VirtualizedListContext.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nfunction VirtualizedListCellContextProvider(_ref3) {\n  var cellKey = _ref3.cellKey,\n      children = _ref3.children;\n  var context = (0, React.useContext)(VirtualizedListContext);\n  return React.createElement(VirtualizedListContext.Provider, {\n    value: context == null ? null : (0, _extends2.default)({}, context, {\n      cellKey: cellKey\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }\n  }, children);\n}","map":{"version":3,"sources":["D:/vsCodes/friday/personal_assist/node_modules/react-native/Libraries/Lists/VirtualizedListContext.js"],"names":["VirtualizedListContext","React","createContext","__DEV__","displayName","VirtualizedListContextResetter","children","VirtualizedListContextProvider","value","context","cellKey","getScrollMetrics","horizontal","getOutermostParentListRef","getNestedChildState","registerAsNestedChild","unregisterAsNestedChild","debugInfo","listKey","parent","VirtualizedListCellContextProvider"],"mappings":";;;;;;;;;;;;AAWA;;;;;;;;AAuDO,IAAMA,sBAA+C,GAAGC,KAAK,CAACC,aAAN,CAC7D,IAD6D,CAAxD;;;AAGP,IAAIC,OAAJ,EAAa;AACXH,EAAAA,sBAAsB,CAACI,WAAvB,GAAqC,wBAArC;AACD;;AAKM,SAASC,8BAAT,OAIQ;AAAA,MAHbC,QAGa,QAHbA,QAGa;AACb,SACE,oBAAC,sBAAD,CAAwB,QAAxB;AAAiC,IAAA,KAAK,EAAE,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QADH,CADF;AAKD;;AAKM,SAASC,8BAAT,QAMQ;AAAA,MALbD,QAKa,SALbA,QAKa;AAAA,MAJbE,KAIa,SAJbA,KAIa;AAEb,MAAMC,OAAO,GAAG,mBACd;AAAA,WAAO;AACLC,MAAAA,OAAO,EAAE,IADJ;AAELC,MAAAA,gBAAgB,EAAEH,KAAK,CAACG,gBAFnB;AAGLC,MAAAA,UAAU,EAAEJ,KAAK,CAACI,UAHb;AAILC,MAAAA,yBAAyB,EAAEL,KAAK,CAACK,yBAJ5B;AAKLC,MAAAA,mBAAmB,EAAEN,KAAK,CAACM,mBALtB;AAMLC,MAAAA,qBAAqB,EAAEP,KAAK,CAACO,qBANxB;AAOLC,MAAAA,uBAAuB,EAAER,KAAK,CAACQ,uBAP1B;AAQLC,MAAAA,SAAS,EAAE;AACTP,QAAAA,OAAO,EAAEF,KAAK,CAACS,SAAN,CAAgBP,OADhB;AAETE,QAAAA,UAAU,EAAEJ,KAAK,CAACS,SAAN,CAAgBL,UAFnB;AAGTM,QAAAA,OAAO,EAAEV,KAAK,CAACS,SAAN,CAAgBC,OAHhB;AAITC,QAAAA,MAAM,EAAEX,KAAK,CAACS,SAAN,CAAgBE;AAJf;AARN,KAAP;AAAA,GADc,EAgBd,CACEX,KAAK,CAACG,gBADR,EAEEH,KAAK,CAACI,UAFR,EAGEJ,KAAK,CAACK,yBAHR,EAIEL,KAAK,CAACM,mBAJR,EAKEN,KAAK,CAACO,qBALR,EAMEP,KAAK,CAACQ,uBANR,EAOER,KAAK,CAACS,SAAN,CAAgBP,OAPlB,EAQEF,KAAK,CAACS,SAAN,CAAgBL,UARlB,EASEJ,KAAK,CAACS,SAAN,CAAgBC,OATlB,EAUEV,KAAK,CAACS,SAAN,CAAgBE,MAVlB,CAhBc,CAAhB;AA6BA,SACE,oBAAC,sBAAD,CAAwB,QAAxB;AAAiC,IAAA,KAAK,EAAEV,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QADH,CADF;AAKD;;AAKM,SAASc,kCAAT,QAMQ;AAAA,MALbV,OAKa,SALbA,OAKa;AAAA,MAJbJ,QAIa,SAJbA,QAIa;AACb,MAAMG,OAAO,GAAG,sBAAWT,sBAAX,CAAhB;AACA,SACE,oBAAC,sBAAD,CAAwB,QAAxB;AACE,IAAA,KAAK,EAAES,OAAO,IAAI,IAAX,GAAkB,IAAlB,8BAA6BA,OAA7B;AAAsCC,MAAAA,OAAO,EAAPA;AAAtC,MADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGJ,QAFH,CADF;AAMD","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type VirtualizedList from './VirtualizedList.js';\nimport * as React from 'react';\nimport {useMemo, useContext} from 'react';\n\ntype Frame = $ReadOnly<{\n  offset: number,\n  length: number,\n  index: number,\n  inLayout: boolean,\n}>;\n\nexport type ChildListState = $ReadOnly<{\n  first: number,\n  last: number,\n  frames: {[key: number]: Frame},\n}>;\n\n// Data propagated through nested lists (regardless of orientation) that is\n// useful for producing diagnostics for usage errors involving nesting (e.g\n// missing/duplicate keys).\nexport type ListDebugInfo = $ReadOnly<{\n  cellKey: string,\n  listKey: string,\n  parent: ?ListDebugInfo,\n  // We include all ancestors regardless of orientation, so this is not always\n  // identical to the child's orientation.\n  horizontal: boolean,\n}>;\n\ntype Context = $ReadOnly<{\n  cellKey: ?string,\n  getScrollMetrics: () => {\n    contentLength: number,\n    dOffset: number,\n    dt: number,\n    offset: number,\n    timestamp: number,\n    velocity: number,\n    visibleLength: number,\n  },\n  horizontal: ?boolean,\n  getOutermostParentListRef: () => VirtualizedList,\n  getNestedChildState: string => ?ChildListState,\n  registerAsNestedChild: ({\n    cellKey: string,\n    key: string,\n    ref: VirtualizedList,\n    parentDebugInfo: ListDebugInfo,\n  }) => ?ChildListState,\n  unregisterAsNestedChild: ({\n    key: string,\n    state: ChildListState,\n  }) => void,\n  debugInfo: ListDebugInfo,\n}>;\n\nexport const VirtualizedListContext: React.Context<?Context> = React.createContext(\n  null,\n);\nif (__DEV__) {\n  VirtualizedListContext.displayName = 'VirtualizedListContext';\n}\n\n/**\n * Resets the context. Intended for use by portal-like components (e.g. Modal).\n */\nexport function VirtualizedListContextResetter({\n  children,\n}: {\n  children: React.Node,\n}): React.Node {\n  return (\n    <VirtualizedListContext.Provider value={null}>\n      {children}\n    </VirtualizedListContext.Provider>\n  );\n}\n\n/**\n * Sets the context with memoization. Intended to be used by `VirtualizedList`.\n */\nexport function VirtualizedListContextProvider({\n  children,\n  value,\n}: {\n  children: React.Node,\n  value: Context,\n}): React.Node {\n  // Avoid setting a newly created context object if the values are identical.\n  const context = useMemo(\n    () => ({\n      cellKey: null,\n      getScrollMetrics: value.getScrollMetrics,\n      horizontal: value.horizontal,\n      getOutermostParentListRef: value.getOutermostParentListRef,\n      getNestedChildState: value.getNestedChildState,\n      registerAsNestedChild: value.registerAsNestedChild,\n      unregisterAsNestedChild: value.unregisterAsNestedChild,\n      debugInfo: {\n        cellKey: value.debugInfo.cellKey,\n        horizontal: value.debugInfo.horizontal,\n        listKey: value.debugInfo.listKey,\n        parent: value.debugInfo.parent,\n      },\n    }),\n    [\n      value.getScrollMetrics,\n      value.horizontal,\n      value.getOutermostParentListRef,\n      value.getNestedChildState,\n      value.registerAsNestedChild,\n      value.unregisterAsNestedChild,\n      value.debugInfo.cellKey,\n      value.debugInfo.horizontal,\n      value.debugInfo.listKey,\n      value.debugInfo.parent,\n    ],\n  );\n  return (\n    <VirtualizedListContext.Provider value={context}>\n      {children}\n    </VirtualizedListContext.Provider>\n  );\n}\n\n/**\n * Sets the `cellKey`. Intended to be used by `VirtualizedList` for each cell.\n */\nexport function VirtualizedListCellContextProvider({\n  cellKey,\n  children,\n}: {\n  cellKey: string,\n  children: React.Node,\n}): React.Node {\n  const context = useContext(VirtualizedListContext);\n  return (\n    <VirtualizedListContext.Provider\n      value={context == null ? null : {...context, cellKey}}>\n      {children}\n    </VirtualizedListContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"script"}