{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useColorScheme;\n\nvar _react = require(\"react\");\n\nvar _useSubscription = require(\"use-subscription\");\n\nvar _Appearance = _interopRequireDefault(require(\"./Appearance\"));\n\nfunction useColorScheme() {\n  var subscription = (0, _react.useMemo)(function () {\n    return {\n      getCurrentValue: function getCurrentValue() {\n        return _Appearance.default.getColorScheme();\n      },\n      subscribe: function subscribe(callback) {\n        var appearanceSubscription = _Appearance.default.addChangeListener(callback);\n\n        return function () {\n          appearanceSubscription.remove();\n        };\n      }\n    };\n  }, []);\n  return (0, _useSubscription.useSubscription)(subscription);\n}","map":{"version":3,"sources":["D:/vsCodes/friday/personal_assist/node_modules/react-native/Libraries/Utilities/useColorScheme.js"],"names":["useColorScheme","subscription","getCurrentValue","Appearance","getColorScheme","subscribe","callback","appearanceSubscription","addChangeListener","remove"],"mappings":";;;;;;;AAUA;;AACA;;AACA;;AAGe,SAASA,cAAT,GAA4C;AACzD,MAAMC,YAAY,GAAG,oBACnB;AAAA,WAAO;AACLC,MAAAA,eAAe,EAAE;AAAA,eAAMC,oBAAWC,cAAX,EAAN;AAAA,OADZ;AAELC,MAAAA,SAAS,EAAE,mBAAAC,QAAQ,EAAI;AACrB,YAAMC,sBAAsB,GAAGJ,oBAAWK,iBAAX,CAA6BF,QAA7B,CAA/B;;AACA,eAAO,YAAM;AACXC,UAAAA,sBAAsB,CAACE,MAAvB;AACD,SAFD;AAGD;AAPI,KAAP;AAAA,GADmB,EAUnB,EAVmB,CAArB;AAaA,SAAO,sCAAgBR,YAAhB,CAAP;AACD","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport {useMemo} from 'react';\nimport {useSubscription} from 'use-subscription';\nimport Appearance from './Appearance';\nimport type {ColorSchemeName} from './NativeAppearance';\n\nexport default function useColorScheme(): ?ColorSchemeName {\n  const subscription = useMemo(\n    () => ({\n      getCurrentValue: () => Appearance.getColorScheme(),\n      subscribe: callback => {\n        const appearanceSubscription = Appearance.addChangeListener(callback);\n        return () => {\n          appearanceSubscription.remove();\n        };\n      },\n    }),\n    [],\n  );\n\n  return useSubscription(subscription);\n}\n"]},"metadata":{},"sourceType":"script"}