{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _EventSubscription3 = _interopRequireDefault(require(\"./_EventSubscription\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar EmitterSubscription = function (_EventSubscription2) {\n  (0, _inherits2.default)(EmitterSubscription, _EventSubscription2);\n\n  var _super = _createSuper(EmitterSubscription);\n\n  function EmitterSubscription(emitter, subscriber, listener, context) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, EmitterSubscription);\n    _this = _super.call(this, subscriber);\n    _this.emitter = emitter;\n    _this.listener = listener;\n    _this.context = context;\n    return _this;\n  }\n\n  (0, _createClass2.default)(EmitterSubscription, [{\n    key: \"remove\",\n    value: function remove() {\n      this.emitter.__removeSubscription(this);\n    }\n  }]);\n  return EmitterSubscription;\n}(_EventSubscription3.default);\n\nmodule.exports = EmitterSubscription;","map":{"version":3,"sources":["D:/vsCodes/friday/personal_assist/node_modules/react-native/Libraries/vendor/emitter/_EmitterSubscription.js"],"names":["EmitterSubscription","emitter","subscriber","listener","context","__removeSubscription","_EventSubscription","module","exports"],"mappings":"AAUA;;;;;;;;;;;;;;AAGA;;;;;;IAOMA,mB;;;;;AAiBJ,+BACEC,OADF,EAEEC,UAFF,EAGEC,QAHF,EAIEC,OAJF,EAKE;AAAA;;AAAA;AACA,8BAAMF,UAAN;AACA,UAAKD,OAAL,GAAeA,OAAf;AACA,UAAKE,QAAL,GAAgBA,QAAhB;AACA,UAAKC,OAAL,GAAeA,OAAf;AAJA;AAKD;;;;WAQD,kBAAe;AACb,WAAKH,OAAL,CAAaI,oBAAb,CAAkC,IAAlC;AACD;;;EApCOC,2B;;AAuCVC,MAAM,CAACC,OAAP,GAAiBR,mBAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\nimport type EventEmitter from './EventEmitter';\nimport _EventSubscription from './_EventSubscription';\nimport type EventSubscriptionVendor from './_EventSubscriptionVendor';\nimport {type EventSubscription} from './EventSubscription';\n\n/**\n * EmitterSubscription represents a subscription with listener and context data.\n */\nclass EmitterSubscription<EventDefinitions: {...}, K: $Keys<EventDefinitions>>\n  extends _EventSubscription<EventDefinitions, K>\n  implements EventSubscription {\n  emitter: EventEmitter<EventDefinitions>;\n  listener: ?(...$ElementType<EventDefinitions, K>) => mixed;\n  context: ?$FlowFixMe;\n\n  /**\n   * @param {EventEmitter} emitter - The event emitter that registered this\n   *   subscription\n   * @param {EventSubscriptionVendor} subscriber - The subscriber that controls\n   *   this subscription\n   * @param {function} listener - Function to invoke when the specified event is\n   *   emitted\n   * @param {*} context - Optional context object to use when invoking the\n   *   listener\n   */\n  constructor(\n    emitter: EventEmitter<EventDefinitions>,\n    subscriber: EventSubscriptionVendor<EventDefinitions>,\n    listener: (...$ElementType<EventDefinitions, K>) => mixed,\n    context: ?$FlowFixMe,\n  ) {\n    super(subscriber);\n    this.emitter = emitter;\n    this.listener = listener;\n    this.context = context;\n  }\n\n  /**\n   * Removes this subscription from the emitter that registered it.\n   * Note: we're overriding the `remove()` method of _EventSubscription here\n   * but deliberately not calling `super.remove()` as the responsibility\n   * for removing the subscription lies with the EventEmitter.\n   */\n  remove(): void {\n    this.emitter.__removeSubscription(this);\n  }\n}\n\nmodule.exports = EmitterSubscription;\n"]},"metadata":{},"sourceType":"script"}