{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _Pressability = _interopRequireDefault(require(\"../../Pressability/Pressability\"));\n\nvar _PressabilityDebug = require(\"../../Pressability/PressabilityDebug\");\n\nvar _View = _interopRequireDefault(require(\"../../Components/View/View\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _excluded = [\"onBlur\", \"onFocus\"];\nvar _jsxFileName = \"D:\\\\vsCodes\\\\friday\\\\personal_assist\\\\node_modules\\\\react-native\\\\Libraries\\\\Components\\\\Touchable\\\\TouchableWithoutFeedback.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar PASSTHROUGH_PROPS = ['accessibilityActions', 'accessibilityElementsHidden', 'accessibilityHint', 'accessibilityIgnoresInvertColors', 'accessibilityLabel', 'accessibilityLiveRegion', 'accessibilityRole', 'accessibilityValue', 'accessibilityViewIsModal', 'hitSlop', 'importantForAccessibility', 'nativeID', 'onAccessibilityAction', 'onBlur', 'onFocus', 'onLayout', 'testID'];\n\nvar TouchableWithoutFeedback = function (_React$Component) {\n  (0, _inherits2.default)(TouchableWithoutFeedback, _React$Component);\n\n  var _super = _createSuper(TouchableWithoutFeedback);\n\n  function TouchableWithoutFeedback() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, TouchableWithoutFeedback);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      pressability: new _Pressability.default(createPressabilityConfig(_this.props))\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(TouchableWithoutFeedback, [{\n    key: \"render\",\n    value: function render() {\n      var element = React.Children.only(this.props.children);\n      var children = [element.props.children];\n\n      if (__DEV__) {\n        if (element.type === _View.default) {\n          children.push(React.createElement(_PressabilityDebug.PressabilityDebugView, {\n            color: \"red\",\n            hitSlop: this.props.hitSlop,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 11\n            }\n          }));\n        }\n      }\n\n      var _this$state$pressabil = this.state.pressability.getEventHandlers(),\n          onBlur = _this$state$pressabil.onBlur,\n          onFocus = _this$state$pressabil.onFocus,\n          eventHandlersWithoutBlurAndFocus = (0, _objectWithoutProperties2.default)(_this$state$pressabil, _excluded);\n\n      var elementProps = (0, _extends2.default)({}, eventHandlersWithoutBlurAndFocus, {\n        accessible: this.props.accessible !== false,\n        accessibilityState: this.props.disabled != null ? (0, _extends2.default)({}, this.props.accessibilityState, {\n          disabled: this.props.disabled\n        }) : this.props.accessibilityState,\n        focusable: this.props.focusable !== false && this.props.onPress !== undefined\n      });\n\n      for (var _iterator = _createForOfIteratorHelperLoose(PASSTHROUGH_PROPS), _step; !(_step = _iterator()).done;) {\n        var prop = _step.value;\n\n        if (this.props[prop] !== undefined) {\n          elementProps[prop] = this.props[prop];\n        }\n      }\n\n      return React.cloneElement.apply(React, [element, elementProps].concat(children));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.state.pressability.configure(createPressabilityConfig(this.props));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.state.pressability.reset();\n    }\n  }]);\n  return TouchableWithoutFeedback;\n}(React.Component);\n\nfunction createPressabilityConfig(props) {\n  var _props$accessibilityS;\n\n  return {\n    cancelable: !props.rejectResponderTermination,\n    disabled: props.disabled !== null ? props.disabled : (_props$accessibilityS = props.accessibilityState) == null ? void 0 : _props$accessibilityS.disabled,\n    hitSlop: props.hitSlop,\n    delayLongPress: props.delayLongPress,\n    delayPressIn: props.delayPressIn,\n    delayPressOut: props.delayPressOut,\n    minPressDuration: 0,\n    pressRectOffset: props.pressRetentionOffset,\n    android_disableSound: props.touchSoundDisabled,\n    onBlur: props.onBlur,\n    onFocus: props.onFocus,\n    onLongPress: props.onLongPress,\n    onPress: props.onPress,\n    onPressIn: props.onPressIn,\n    onPressOut: props.onPressOut\n  };\n}\n\nTouchableWithoutFeedback.displayName = 'TouchableWithoutFeedback';\nmodule.exports = TouchableWithoutFeedback;","map":{"version":3,"sources":["D:/vsCodes/friday/personal_assist/node_modules/react-native/Libraries/Components/Touchable/TouchableWithoutFeedback.js"],"names":["PASSTHROUGH_PROPS","TouchableWithoutFeedback","state","pressability","Pressability","createPressabilityConfig","props","element","React","Children","only","children","__DEV__","type","View","push","hitSlop","getEventHandlers","onBlur","onFocus","eventHandlersWithoutBlurAndFocus","elementProps","accessible","accessibilityState","disabled","focusable","onPress","undefined","prop","cloneElement","configure","reset","Component","cancelable","rejectResponderTermination","delayLongPress","delayPressIn","delayPressOut","minPressDuration","pressRectOffset","pressRetentionOffset","android_disableSound","touchSoundDisabled","onLongPress","onPressIn","onPressOut","displayName","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport Pressability, {\n  type PressabilityConfig,\n} from '../../Pressability/Pressability';\nimport {PressabilityDebugView} from '../../Pressability/PressabilityDebug';\nimport type {\n  AccessibilityActionEvent,\n  AccessibilityActionInfo,\n  AccessibilityRole,\n  AccessibilityState,\n  AccessibilityValue,\n} from '../../Components/View/ViewAccessibility';\nimport type {EdgeInsetsProp} from '../../StyleSheet/EdgeInsetsPropType';\nimport type {\n  BlurEvent,\n  FocusEvent,\n  LayoutEvent,\n  PressEvent,\n} from '../../Types/CoreEventTypes';\nimport View from '../../Components/View/View';\nimport * as React from 'react';\n\ntype Props = $ReadOnly<{|\n  accessibilityActions?: ?$ReadOnlyArray<AccessibilityActionInfo>,\n  accessibilityElementsHidden?: ?boolean,\n  accessibilityHint?: ?Stringish,\n  accessibilityIgnoresInvertColors?: ?boolean,\n  accessibilityLabel?: ?Stringish,\n  accessibilityLiveRegion?: ?('none' | 'polite' | 'assertive'),\n  accessibilityRole?: ?AccessibilityRole,\n  accessibilityState?: ?AccessibilityState,\n  accessibilityValue?: ?AccessibilityValue,\n  accessibilityViewIsModal?: ?boolean,\n  accessible?: ?boolean,\n  children?: ?React.Node,\n  delayLongPress?: ?number,\n  delayPressIn?: ?number,\n  delayPressOut?: ?number,\n  disabled?: ?boolean,\n  focusable?: ?boolean,\n  hitSlop?: ?EdgeInsetsProp,\n  importantForAccessibility?: ?('auto' | 'yes' | 'no' | 'no-hide-descendants'),\n  nativeID?: ?string,\n  onAccessibilityAction?: ?(event: AccessibilityActionEvent) => mixed,\n  onBlur?: ?(event: BlurEvent) => mixed,\n  onFocus?: ?(event: FocusEvent) => mixed,\n  onLayout?: ?(event: LayoutEvent) => mixed,\n  onLongPress?: ?(event: PressEvent) => mixed,\n  onPress?: ?(event: PressEvent) => mixed,\n  onPressIn?: ?(event: PressEvent) => mixed,\n  onPressOut?: ?(event: PressEvent) => mixed,\n  pressRetentionOffset?: ?EdgeInsetsProp,\n  rejectResponderTermination?: ?boolean,\n  testID?: ?string,\n  touchSoundDisabled?: ?boolean,\n|}>;\n\ntype State = $ReadOnly<{|\n  pressability: Pressability,\n|}>;\n\nconst PASSTHROUGH_PROPS = [\n  'accessibilityActions',\n  'accessibilityElementsHidden',\n  'accessibilityHint',\n  'accessibilityIgnoresInvertColors',\n  'accessibilityLabel',\n  'accessibilityLiveRegion',\n  'accessibilityRole',\n  'accessibilityValue',\n  'accessibilityViewIsModal',\n  'hitSlop',\n  'importantForAccessibility',\n  'nativeID',\n  'onAccessibilityAction',\n  'onBlur',\n  'onFocus',\n  'onLayout',\n  'testID',\n];\n\nclass TouchableWithoutFeedback extends React.Component<Props, State> {\n  state: State = {\n    pressability: new Pressability(createPressabilityConfig(this.props)),\n  };\n\n  render(): React.Node {\n    const element = React.Children.only(this.props.children);\n    const children = [element.props.children];\n    if (__DEV__) {\n      if (element.type === View) {\n        children.push(\n          <PressabilityDebugView color=\"red\" hitSlop={this.props.hitSlop} />,\n        );\n      }\n    }\n\n    // BACKWARD-COMPATIBILITY: Focus and blur events were never supported before\n    // adopting `Pressability`, so preserve that behavior.\n    const {\n      onBlur,\n      onFocus,\n      ...eventHandlersWithoutBlurAndFocus\n    } = this.state.pressability.getEventHandlers();\n\n    const elementProps: {[string]: mixed, ...} = {\n      ...eventHandlersWithoutBlurAndFocus,\n      accessible: this.props.accessible !== false,\n      accessibilityState:\n        this.props.disabled != null\n          ? {\n              ...this.props.accessibilityState,\n              disabled: this.props.disabled,\n            }\n          : this.props.accessibilityState,\n      focusable:\n        this.props.focusable !== false && this.props.onPress !== undefined,\n    };\n    for (const prop of PASSTHROUGH_PROPS) {\n      if (this.props[prop] !== undefined) {\n        elementProps[prop] = this.props[prop];\n      }\n    }\n\n    return React.cloneElement(element, elementProps, ...children);\n  }\n\n  componentDidUpdate(): void {\n    this.state.pressability.configure(createPressabilityConfig(this.props));\n  }\n\n  componentWillUnmount(): void {\n    this.state.pressability.reset();\n  }\n}\n\nfunction createPressabilityConfig(props: Props): PressabilityConfig {\n  return {\n    cancelable: !props.rejectResponderTermination,\n    disabled:\n      props.disabled !== null\n        ? props.disabled\n        : props.accessibilityState?.disabled,\n    hitSlop: props.hitSlop,\n    delayLongPress: props.delayLongPress,\n    delayPressIn: props.delayPressIn,\n    delayPressOut: props.delayPressOut,\n    minPressDuration: 0,\n    pressRectOffset: props.pressRetentionOffset,\n    android_disableSound: props.touchSoundDisabled,\n    onBlur: props.onBlur,\n    onFocus: props.onFocus,\n    onLongPress: props.onLongPress,\n    onPress: props.onPress,\n    onPressIn: props.onPressIn,\n    onPressOut: props.onPressOut,\n  };\n}\n\nTouchableWithoutFeedback.displayName = 'TouchableWithoutFeedback';\n\nmodule.exports = TouchableWithoutFeedback;\n"]},"metadata":{},"sourceType":"script"}