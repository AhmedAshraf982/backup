{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _Platform = _interopRequireDefault(require(\"../../Utilities/Platform\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"../../StyleSheet/StyleSheet\"));\n\nvar _View = _interopRequireDefault(require(\"../View/View\"));\n\nvar _excluded = [\"animating\", \"color\", \"hidesWhenStopped\", \"onLayout\", \"size\", \"style\"];\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\vsCodes\\\\friday\\\\personal_assist\\\\node_modules\\\\react-native\\\\Libraries\\\\Components\\\\ActivityIndicator\\\\ActivityIndicator.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar PlatformActivityIndicator = _Platform.default.OS === 'android' ? require('../ProgressBarAndroid/ProgressBarAndroid') : require('./ActivityIndicatorViewNativeComponent').default;\nvar GRAY = '#999999';\n\nvar ActivityIndicator = function ActivityIndicator(_ref, forwardedRef) {\n  var _ref$animating = _ref.animating,\n      animating = _ref$animating === void 0 ? true : _ref$animating,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? _Platform.default.OS === 'ios' ? GRAY : null : _ref$color,\n      _ref$hidesWhenStopped = _ref.hidesWhenStopped,\n      hidesWhenStopped = _ref$hidesWhenStopped === void 0 ? true : _ref$hidesWhenStopped,\n      onLayout = _ref.onLayout,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 'small' : _ref$size,\n      style = _ref.style,\n      restProps = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var sizeStyle;\n  var sizeProp;\n\n  switch (size) {\n    case 'small':\n      sizeStyle = styles.sizeSmall;\n      sizeProp = 'small';\n      break;\n\n    case 'large':\n      sizeStyle = styles.sizeLarge;\n      sizeProp = 'large';\n      break;\n\n    default:\n      sizeStyle = {\n        height: size,\n        width: size\n      };\n      break;\n  }\n\n  var nativeProps = (0, _extends2.default)({\n    animating: animating,\n    color: color,\n    hidesWhenStopped: hidesWhenStopped\n  }, restProps, {\n    ref: forwardedRef,\n    style: sizeStyle,\n    size: sizeProp\n  });\n  var androidProps = {\n    styleAttr: 'Normal',\n    indeterminate: true\n  };\n  return React.createElement(_View.default, {\n    onLayout: onLayout,\n    style: _StyleSheet.default.compose(styles.container, style),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, _Platform.default.OS === 'android' ? React.createElement(PlatformActivityIndicator, (0, _extends2.default)({}, nativeProps, androidProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  })) : React.createElement(PlatformActivityIndicator, (0, _extends2.default)({}, nativeProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar ActivityIndicatorWithRef = React.forwardRef(ActivityIndicator);\nActivityIndicatorWithRef.displayName = 'ActivityIndicator';\n\nvar styles = _StyleSheet.default.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  sizeSmall: {\n    width: 20,\n    height: 20\n  },\n  sizeLarge: {\n    width: 36,\n    height: 36\n  }\n});\n\nmodule.exports = ActivityIndicatorWithRef;","map":{"version":3,"sources":["D:/vsCodes/friday/personal_assist/node_modules/react-native/Libraries/Components/ActivityIndicator/ActivityIndicator.js"],"names":["PlatformActivityIndicator","Platform","OS","require","default","GRAY","ActivityIndicator","forwardedRef","animating","color","hidesWhenStopped","onLayout","size","style","restProps","sizeStyle","sizeProp","styles","sizeSmall","sizeLarge","height","width","nativeProps","ref","androidProps","styleAttr","indeterminate","StyleSheet","compose","container","ActivityIndicatorWithRef","React","forwardRef","displayName","create","alignItems","justifyContent","module","exports"],"mappings":"AAWA;;;;;;;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;AAIA,IAAMA,yBAAyB,GAC7BC,kBAASC,EAAT,KAAgB,SAAhB,GACIC,OAAO,CAAC,0CAAD,CADX,GAEIA,OAAO,CAAC,wCAAD,CAAP,CAAkDC,OAHxD;AAKA,IAAMC,IAAI,GAAG,SAAb;;AAsCA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAUxBC,YAVwB,EAWrB;AAAA,4BATDC,SASC;AAAA,MATDA,SASC,+BATW,IASX;AAAA,wBARDC,KAQC;AAAA,MARDA,KAQC,2BAROR,kBAASC,EAAT,KAAgB,KAAhB,GAAwBG,IAAxB,GAA+B,IAQtC;AAAA,mCAPDK,gBAOC;AAAA,MAPDA,gBAOC,sCAPkB,IAOlB;AAAA,MANDC,QAMC,QANDA,QAMC;AAAA,uBALDC,IAKC;AAAA,MALDA,IAKC,0BALM,OAKN;AAAA,MAJDC,KAIC,QAJDA,KAIC;AAAA,MAHEC,SAGF;AACH,MAAIC,SAAJ;AACA,MAAIC,QAAJ;;AAEA,UAAQJ,IAAR;AACE,SAAK,OAAL;AACEG,MAAAA,SAAS,GAAGE,MAAM,CAACC,SAAnB;AACAF,MAAAA,QAAQ,GAAG,OAAX;AACA;;AACF,SAAK,OAAL;AACED,MAAAA,SAAS,GAAGE,MAAM,CAACE,SAAnB;AACAH,MAAAA,QAAQ,GAAG,OAAX;AACA;;AACF;AACED,MAAAA,SAAS,GAAG;AAACK,QAAAA,MAAM,EAAER,IAAT;AAAeS,QAAAA,KAAK,EAAET;AAAtB,OAAZ;AACA;AAXJ;;AAcA,MAAMU,WAAW;AACfd,IAAAA,SAAS,EAATA,SADe;AAEfC,IAAAA,KAAK,EAALA,KAFe;AAGfC,IAAAA,gBAAgB,EAAhBA;AAHe,KAIZI,SAJY;AAKfS,IAAAA,GAAG,EAAEhB,YALU;AAMfM,IAAAA,KAAK,EAAEE,SANQ;AAOfH,IAAAA,IAAI,EAAEI;AAPS,IAAjB;AAUA,MAAMQ,YAAY,GAAG;AACnBC,IAAAA,SAAS,EAAE,QADQ;AAEnBC,IAAAA,aAAa,EAAE;AAFI,GAArB;AAKA,SACE,oBAAC,aAAD;AACE,IAAA,QAAQ,EAAEf,QADZ;AAEE,IAAA,KAAK,EAAEgB,oBAAWC,OAAX,CAAmBX,MAAM,CAACY,SAA1B,EAAqChB,KAArC,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGZ,kBAASC,EAAT,KAAgB,SAAhB,GAEC,oBAAC,yBAAD,6BAA+BoB,WAA/B,EAAgDE,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFD,GAOC,oBAAC,yBAAD,6BAA+BF,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAVJ,CADF;AAeD,CA3DD;;AA2HA,IAAMQ,wBAGL,GAAGC,KAAK,CAACC,UAAN,CAAiB1B,iBAAjB,CAHJ;AAIAwB,wBAAwB,CAACG,WAAzB,GAAuC,mBAAvC;;AAEA,IAAMhB,MAAM,GAAGU,oBAAWO,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,UAAU,EAAE,QADH;AAETC,IAAAA,cAAc,EAAE;AAFP,GADoB;AAK/BlB,EAAAA,SAAS,EAAE;AACTG,IAAAA,KAAK,EAAE,EADE;AAETD,IAAAA,MAAM,EAAE;AAFC,GALoB;AAS/BD,EAAAA,SAAS,EAAE;AACTE,IAAAA,KAAK,EAAE,EADE;AAETD,IAAAA,MAAM,EAAE;AAFC;AAToB,CAAlB,CAAf;;AAeAiB,MAAM,CAACC,OAAP,GAAiBR,wBAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n * @generate-docs\n */\n\n'use strict';\nimport * as React from 'react';\nimport Platform from '../../Utilities/Platform';\nimport StyleSheet, {type ColorValue} from '../../StyleSheet/StyleSheet';\nimport View from '../View/View';\nimport type {HostComponent} from '../../Renderer/shims/ReactNativeTypes';\nimport type {ViewProps} from '../View/ViewPropTypes';\n\nconst PlatformActivityIndicator =\n  Platform.OS === 'android'\n    ? require('../ProgressBarAndroid/ProgressBarAndroid')\n    : require('./ActivityIndicatorViewNativeComponent').default;\n\nconst GRAY = '#999999';\n\ntype IndicatorSize = number | 'small' | 'large';\n\ntype IOSProps = $ReadOnly<{|\n  /**\n    Whether the indicator should hide when not animating.\n\n    @platform ios\n  */\n  hidesWhenStopped?: ?boolean,\n|}>;\ntype Props = $ReadOnly<{|\n  ...ViewProps,\n  ...IOSProps,\n\n  /**\n   \tWhether to show the indicator (`true`) or hide it (`false`).\n   */\n  animating?: ?boolean,\n\n  /**\n    The foreground color of the spinner.\n\n    @default {@platform android} `null` (system accent default color)\n    @default {@platform ios} '#999999'\n  */\n  color?: ?ColorValue,\n\n  /**\n    Size of the indicator.\n\n    @type enum(`'small'`, `'large'`)\n    @type {@platform android} number\n  */\n  size?: ?IndicatorSize,\n|}>;\n\nconst ActivityIndicator = (\n  {\n    animating = true,\n    color = Platform.OS === 'ios' ? GRAY : null,\n    hidesWhenStopped = true,\n    onLayout,\n    size = 'small',\n    style,\n    ...restProps\n  }: Props,\n  forwardedRef?: any,\n) => {\n  let sizeStyle;\n  let sizeProp;\n\n  switch (size) {\n    case 'small':\n      sizeStyle = styles.sizeSmall;\n      sizeProp = 'small';\n      break;\n    case 'large':\n      sizeStyle = styles.sizeLarge;\n      sizeProp = 'large';\n      break;\n    default:\n      sizeStyle = {height: size, width: size};\n      break;\n  }\n\n  const nativeProps = {\n    animating,\n    color,\n    hidesWhenStopped,\n    ...restProps,\n    ref: forwardedRef,\n    style: sizeStyle,\n    size: sizeProp,\n  };\n\n  const androidProps = {\n    styleAttr: 'Normal',\n    indeterminate: true,\n  };\n\n  return (\n    <View\n      onLayout={onLayout}\n      style={StyleSheet.compose(styles.container, style)}>\n      {Platform.OS === 'android' ? (\n        // $FlowFixMe[prop-missing] Flow doesn't know when this is the android component\n        <PlatformActivityIndicator {...nativeProps} {...androidProps} />\n      ) : (\n        /* $FlowFixMe[prop-missing] (>=0.106.0 site=react_native_android_fb) This comment\n         * suppresses an error found when Flow v0.106 was deployed. To see the\n         * error, delete this comment and run Flow. */\n        <PlatformActivityIndicator {...nativeProps} />\n      )}\n    </View>\n  );\n};\n\n/**\n  Displays a circular loading indicator.\n\n  ```SnackPlayer name=ActivityIndicator%20Function%20Component%20Example\n  import React from \"react\";\n  import { ActivityIndicator, StyleSheet, Text, View } from \"react-native\";\n\n  const App = () => (\n    <View style={[styles.container, styles.horizontal]}>\n      <ActivityIndicator />\n      <ActivityIndicator size=\"large\" />\n      <ActivityIndicator size=\"small\" color=\"#0000ff\" />\n      <ActivityIndicator size=\"large\" color=\"#00ff00\" />\n    </View>\n  );\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: \"center\"\n    },\n    horizontal: {\n      flexDirection: \"row\",\n      justifyContent: \"space-around\",\n      padding: 10\n    }\n  });\n  export default App;\n  ```\n\n  ```SnackPlayer name=ActivityIndicator%20Class%20Component%20Example\n  import React, { Component } from \"react\";\n  import { ActivityIndicator, StyleSheet, Text, View } from \"react-native\";\n\n  class App extends Component {\n    render() {\n      return (\n        <View style={[styles.container, styles.horizontal]}>\n          <ActivityIndicator />\n          <ActivityIndicator size=\"large\" />\n          <ActivityIndicator size=\"small\" color=\"#0000ff\" />\n          <ActivityIndicator size=\"large\" color=\"#00ff00\" />\n        </View>\n      );\n    }\n  }\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: \"center\"\n    },\n    horizontal: {\n      flexDirection: \"row\",\n      justifyContent: \"space-around\",\n      padding: 10\n    }\n  });\n  export default App;\n  ```\n*/\n\nconst ActivityIndicatorWithRef: React.AbstractComponent<\n  Props,\n  HostComponent<mixed>,\n> = React.forwardRef(ActivityIndicator);\nActivityIndicatorWithRef.displayName = 'ActivityIndicator';\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  sizeSmall: {\n    width: 20,\n    height: 20,\n  },\n  sizeLarge: {\n    width: 36,\n    height: 36,\n  },\n});\n\nmodule.exports = ActivityIndicatorWithRef;\n"]},"metadata":{},"sourceType":"script"}