{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _NativeClipboard = _interopRequireDefault(require(\"./NativeClipboard\"));\n\nmodule.exports = {\n  getString: function getString() {\n    return _NativeClipboard.default.getString();\n  },\n  setString: function setString(content) {\n    _NativeClipboard.default.setString(content);\n  }\n};","map":{"version":3,"sources":["D:/vsCodes/friday/personal_assist/node_modules/react-native/Libraries/Components/Clipboard/Clipboard.js"],"names":["module","exports","getString","NativeClipboard","setString","content"],"mappings":";;AAUA;;AAKAA,MAAM,CAACC,OAAP,GAAiB;AASfC,EAAAA,SATe,uBASc;AAC3B,WAAOC,yBAAgBD,SAAhB,EAAP;AACD,GAXc;AAqBfE,EAAAA,SArBe,qBAqBLC,OArBK,EAqBY;AACzBF,6BAAgBC,SAAhB,CAA0BC,OAA1B;AACD;AAvBc,CAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\nimport NativeClipboard from './NativeClipboard';\n\n/**\n * `Clipboard` gives you an interface for setting and getting content from Clipboard on both iOS and Android\n */\nmodule.exports = {\n  /**\n   * Get content of string type, this method returns a `Promise`, so you can use following code to get clipboard content\n   * ```javascript\n   * async _getContent() {\n   *   var content = await Clipboard.getString();\n   * }\n   * ```\n   */\n  getString(): Promise<string> {\n    return NativeClipboard.getString();\n  },\n  /**\n   * Set content of string type. You can use following code to set clipboard content\n   * ```javascript\n   * _setContent() {\n   *   Clipboard.setString('hello world');\n   * }\n   * ```\n   * @param the content to be stored in the clipboard.\n   */\n  setString(content: string) {\n    NativeClipboard.setString(content);\n  },\n};\n"]},"metadata":{},"sourceType":"script"}