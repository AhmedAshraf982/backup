{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _EventEmitter = _interopRequireDefault(require(\"../vendor/emitter/EventEmitter\"));\n\nvar _default = new _EventEmitter.default();\n\nexports.default = _default;","map":{"version":3,"sources":["D:/vsCodes/friday/personal_assist/node_modules/react-native/Libraries/EventEmitter/RCTDeviceEventEmitter.js"],"names":["EventEmitter"],"mappings":";;;;;;;AAUA;;eAWgB,IAAIA,qBAAJ,E","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport EventEmitter, {type IEventEmitter} from '../vendor/emitter/EventEmitter';\n\n// FIXME: use typed events\ntype RCTDeviceEventDefinitions = $FlowFixMe;\n\n/**\n * Global EventEmitter used by the native platform to emit events to JavaScript.\n * Events are identified by globally unique event names.\n *\n * NativeModules that emit events should instead subclass `NativeEventEmitter`.\n */\nexport default (new EventEmitter(): IEventEmitter<RCTDeviceEventDefinitions>);\n"]},"metadata":{},"sourceType":"script"}