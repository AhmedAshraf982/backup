{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createViewConfig = createViewConfig;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _ReactNativeViewViewConfig = _interopRequireDefault(require(\"../Components/View/ReactNativeViewViewConfig\"));\n\nfunction createViewConfig(partialViewConfig) {\n  return {\n    uiViewClassName: partialViewConfig.uiViewClassName,\n    Commands: {},\n    bubblingEventTypes: composeIndexers(_ReactNativeViewViewConfig.default.bubblingEventTypes, partialViewConfig.bubblingEventTypes),\n    directEventTypes: composeIndexers(_ReactNativeViewViewConfig.default.directEventTypes, partialViewConfig.directEventTypes),\n    validAttributes: composeIndexers(_ReactNativeViewViewConfig.default.validAttributes, partialViewConfig.validAttributes)\n  };\n}\n\nfunction composeIndexers(maybeA, maybeB) {\n  var _ref;\n\n  return maybeA == null || maybeB == null ? (_ref = maybeA != null ? maybeA : maybeB) != null ? _ref : {} : (0, _extends2.default)({}, maybeA, maybeB);\n}","map":{"version":3,"sources":["D:/vsCodes/friday/personal_assist/node_modules/react-native/Libraries/NativeComponent/ViewConfig.js"],"names":["createViewConfig","partialViewConfig","uiViewClassName","Commands","bubblingEventTypes","composeIndexers","ReactNativeViewViewConfig","directEventTypes","validAttributes","maybeA","maybeB"],"mappings":";;;;;;;;;AAUA;;AASO,SAASA,gBAAT,CACLC,iBADK,EAEO;AACZ,SAAO;AACLC,IAAAA,eAAe,EAAED,iBAAiB,CAACC,eAD9B;AAELC,IAAAA,QAAQ,EAAE,EAFL;AAGLC,IAAAA,kBAAkB,EAAEC,eAAe,CACjCC,mCAA0BF,kBADO,EAEjCH,iBAAiB,CAACG,kBAFe,CAH9B;AAOLG,IAAAA,gBAAgB,EAAEF,eAAe,CAC/BC,mCAA0BC,gBADK,EAE/BN,iBAAiB,CAACM,gBAFa,CAP5B;AAWLC,IAAAA,eAAe,EAAEH,eAAe,CAE9BC,mCAA0BE,eAFI,EAI9BP,iBAAiB,CAACO,eAJY;AAX3B,GAAP;AAkBD;;AAED,SAASH,eAAT,CACEI,MADF,EAEEC,MAFF,EAGkB;AAAA;;AAChB,SAAOD,MAAM,IAAI,IAAV,IAAkBC,MAAM,IAAI,IAA5B,WACHD,MADG,WACHA,MADG,GACOC,MADP,mBACiB,EADjB,8BAECD,MAFD,EAEYC,MAFZ,CAAP;AAGD","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport ReactNativeViewViewConfig from '../Components/View/ReactNativeViewViewConfig';\nimport type {\n  PartialViewConfig,\n  ViewConfig,\n} from '../Renderer/shims/ReactNativeTypes';\n\n/**\n * Creates a complete `ViewConfig` from a `PartialViewConfig`.\n */\nexport function createViewConfig(\n  partialViewConfig: PartialViewConfig,\n): ViewConfig {\n  return {\n    uiViewClassName: partialViewConfig.uiViewClassName,\n    Commands: {},\n    bubblingEventTypes: composeIndexers(\n      ReactNativeViewViewConfig.bubblingEventTypes,\n      partialViewConfig.bubblingEventTypes,\n    ),\n    directEventTypes: composeIndexers(\n      ReactNativeViewViewConfig.directEventTypes,\n      partialViewConfig.directEventTypes,\n    ),\n    validAttributes: composeIndexers(\n      // $FlowFixMe[incompatible-call] `style` property confuses Flow.\n      ReactNativeViewViewConfig.validAttributes,\n      // $FlowFixMe[incompatible-call] `style` property confuses Flow.\n      partialViewConfig.validAttributes,\n    ),\n  };\n}\n\nfunction composeIndexers<T>(\n  maybeA: ?{+[string]: T},\n  maybeB: ?{+[string]: T},\n): {+[string]: T} {\n  return maybeA == null || maybeB == null\n    ? maybeA ?? maybeB ?? {}\n    : {...maybeA, ...maybeB};\n}\n"]},"metadata":{},"sourceType":"script"}